) %>%
tibble::rownames_to_column("Info") %>%
mutate(Period = glue::glue("Last {Yrs_LookBack} Years"), Info = c("Cum Returns", "Returns (Ann.)", "Returns Excess (Ann.)", "SD (Ann.)", "Adj. Sharpe Ratio", "Pain Index",
"Avg DD", "Tracking Error", "Information Ratio", "Beta", "Beta Bull", "Beta Bear", "Up-Down Ratio", "Modified CVaR")) %>%
relocate(Period, .before = Info) %>% as_tibble()
# This line replaces the `.` with a space.
# Note the forward slashes, as `.` there means everything, `\\.` means a full-stop
colnames(Moms) <- gsub("\\.", " ", colnames(Moms))
Moms
}
funds <- readxl::read_xlsx("data/MAD .xlsx")
View(funds)
funds %>% gather(Ticker, Value, -Date)
funds %>% gather(Tickers, Value, -Date)
Fundselected <- c("FUDP", "M2GBDY")
BM <- "TUKXG"
Yrs_LookBack <- 5
NA_Check <- 0.8
Tab_stats <-
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
funds <- readxl::read_xlsx("data/MAD .xlsx")
funds <- funds %>% gather(Tickers, Value, -Date)
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
Moments_Comp <- function(funds, BM, Yrs_LookBack, NA_Check){
funds_considered <-
funds %>% filter(date >= fmxdat::safe_year_min(datesel = last(Date), N = Yrs_LookBack))
Funds_Cons <-
funds_considered %>%
group_by(Tickers) %>%
summarise(N_noNA = sum(!is.na(Ret)) / length(unique(funds_considered$Date)) ) %>%
filter(N_noNA > NA_Check) %>% pull(Tickers)
Fundxts <-
funds_considered %>% filter(Tickers %in% Funds_Cons) %>%
tbl2xts::tbl_xts(cols_to_xts = Ret, spread_by = Tickers, Colnames_Exact = T)
BMxts <-
funds_considered %>% filter(Tickers %in% BM) %>%
tbl_xts(cols_to_xts = Ret, Colnames_Exact = T)
library(PerformanceAnalytics)
Moms <-
bind_rows(
data.frame(Return.cumulative(Fundxts) ) %>% round(., 3),
data.frame(Return.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::Return.annualized.excess(Fundxts, BMxts) ) %>% round(., 3),
data.frame(sd.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::AdjustedSharpeRatio( Fundxts ) ) %>% round(., 3),
data.frame(PainIndex(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(AverageDrawdown(Fundxts, scale = 12)) %>% round(., 3),
data.frame(fmxdat::Safe_TE(Ra = Fundxts, Rb = BMxts, scale = 12)) %>% round(., 3),
data.frame(PerformanceAnalytics::InformationRatio(Ra = Fundxts, Rb = BMxts)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta.bull(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta.bear(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::UpDownRatios(Ra = Fundxts, Rb = BMxts, method = "Percent", side = "Up")) %>% round(., 3),
data.frame(PerformanceAnalytics::CVaR(R = Fundxts, p = 0.05, method = "modified")) %>% round(., 3)
) %>%
tibble::rownames_to_column("Info") %>%
mutate(Period = glue::glue("Last {Yrs_LookBack} Years"), Info = c("Cum Returns", "Returns (Ann.)", "Returns Excess (Ann.)", "SD (Ann.)", "Adj. Sharpe Ratio", "Pain Index",
"Avg DD", "Tracking Error", "Information Ratio", "Beta", "Beta Bull", "Beta Bear", "Up-Down Ratio", "Modified CVaR")) %>%
relocate(Period, .before = Info) %>% as_tibble()
# This line replaces the `.` with a space.
# Note the forward slashes, as `.` there means everything, `\\.` means a full-stop
colnames(Moms) <- gsub("\\.", " ", colnames(Moms))
Moms
}
funds <- readxl::read_xlsx("data/MAD .xlsx")
funds <- funds %>% gather(Tickers, Value, -Date)
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
Moments_Comp <- function(funds, BM, Yrs_LookBack, NA_Check){
funds_considered <-
funds %>% filter(date > fmxdat::safe_year_min(datesel = last(Date), N = Yrs_LookBack))
Funds_Cons <-
funds_considered %>%
group_by(Tickers) %>%
summarise(N_noNA = sum(!is.na(Ret)) / length(unique(funds_considered$Date)) ) %>%
filter(N_noNA > NA_Check) %>% pull(Tickers)
Fundxts <-
funds_considered %>% filter(Tickers %in% Funds_Cons) %>%
tbl2xts::tbl_xts(cols_to_xts = Ret, spread_by = Tickers, Colnames_Exact = T)
BMxts <-
funds_considered %>% filter(Tickers %in% BM) %>%
tbl_xts(cols_to_xts = Ret, Colnames_Exact = T)
library(PerformanceAnalytics)
Moms <-
bind_rows(
data.frame(Return.cumulative(Fundxts) ) %>% round(., 3),
data.frame(Return.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::Return.annualized.excess(Fundxts, BMxts) ) %>% round(., 3),
data.frame(sd.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::AdjustedSharpeRatio( Fundxts ) ) %>% round(., 3),
data.frame(PainIndex(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(AverageDrawdown(Fundxts, scale = 12)) %>% round(., 3),
data.frame(fmxdat::Safe_TE(Ra = Fundxts, Rb = BMxts, scale = 12)) %>% round(., 3),
data.frame(PerformanceAnalytics::InformationRatio(Ra = Fundxts, Rb = BMxts)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta.bull(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta.bear(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::UpDownRatios(Ra = Fundxts, Rb = BMxts, method = "Percent", side = "Up")) %>% round(., 3),
data.frame(PerformanceAnalytics::CVaR(R = Fundxts, p = 0.05, method = "modified")) %>% round(., 3)
) %>%
tibble::rownames_to_column("Info") %>%
mutate(Period = glue::glue("Last {Yrs_LookBack} Years"), Info = c("Cum Returns", "Returns (Ann.)", "Returns Excess (Ann.)", "SD (Ann.)", "Adj. Sharpe Ratio", "Pain Index",
"Avg DD", "Tracking Error", "Information Ratio", "Beta", "Beta Bull", "Beta Bear", "Up-Down Ratio", "Modified CVaR")) %>%
relocate(Period, .before = Info) %>% as_tibble()
# This line replaces the `.` with a space.
# Note the forward slashes, as `.` there means everything, `\\.` means a full-stop
colnames(Moms) <- gsub("\\.", " ", colnames(Moms))
Moms
}
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
# loadings
pacman::p_load("xts", "tidyverse", "tbl2xts", "PerformanceAnalytics",
"lubridate", "glue")
library(tbl2xts)
library(tidyverse)
library(xts)
source("code/EXCESSRETURN.R")
source("code/EXCESSRETURN2.R")
library(quantmod)
df <- readxl::read_xlsx("data/MAD .xlsx")
# get all permutatation
A <- df %>% MY_excess_return(.,"FUDP", "TUKXG")
B <- df %>% MY_excess_return(., "M2EFDY", "GDUEEGF")
C <- df %>% MY_excess_return(., "M2EUGDY", "GDDUE15X")
D <- df %>% MY_excess_return(., "M2GBDY", "GDDUUK")
E <- df %>% MY_excess_return(., "M2JPDY", "TJDIVD")
F1 <- df %>% MY_excess_return(., "M2USADVD", "GDDUUS")
G <- df %>% MY_excess_return(., "M2WDHDVD", "GDDUWI")
H <- df %>% MY_excess_return(., "SPDAEET", "SPTR350E")
I <- df %>% MY_excess_return(., "SPDAUDT", "SPXT")
J <- df %>% MY_excess_return(., "SPJXDAJT", "TPXDDVD")
K <- df %>% MY_excess_return(., "SPSADAZT", "JALSH")
L <- df %>% MY_excess_return(., "TJDIVD", "JALSH")
joined_df <- bind_cols(A, B, C, D, E, F1, G, H, I, J, K, L)
compare <- joined_df %>% select(date...1, FUDP, M2EFDY, M2EUGDY, M2GBDY, M2JPDY, M2USADVD, M2WDHDVD, SPDAEET, SPDAUDT, SPJXDAJT, SPSADAZT, TJDIVD) %>% gather(Index , Return , -date...1)
plot <- compare %>% ggplot(aes(x = date...1, y = Return)) +
geom_line() +
labs(x = "Date", y = "Return") +
theme_minimal() +
facet_wrap(~ Index, scales = "free_y", ncol = 4)
plot
# retrieve from yahoo
vix <- getSymbols("VIX")
# Turn to tibble
VIX <- VIX %>%
tbl2xts::xts_tbl(.)
VIX <- VIX %>% select(date, VIX.Close) %>%
rename(., close = VIX.Close)
# get rolling volatilty
RollSD <- VIX %>%  arrange(date) %>%
mutate(YM = format(date, "%Y-%b")) %>%
group_by(YM) %>%
mutate(ret = log(close)- lag(log(close))) %>%
mutate(ret = coalesce(ret, 0)) %>%
mutate(RollSD = RcppRoll::roll_sd(1+ret, 12, fill = NA, align = "right") *
sqrt(12)) %>%
ungroup() %>%
filter(!is.na(RollSD)) %>%
select(date, RollSD)
# label and pull dates
strat_df <-
RollSD %>% mutate(topQ = quantile(RollSD, probs = 0.8),
botQ = quantile(RollSD, probs = 0.2),
Strat = ifelse(RollSD >= topQ, "HiVol",
ifelse(RollSD <= botQ, "LowVol", "Normal_Vol")))
#  lets pull dates for the high vol period
hivol_per_vector <- strat_df %>% filter(Strat %in% "HiVol") %>% pull(date)
# use dates to get returns for indexes and benchamrks, I will use the comparison dataframe, that has excess returns to do a crude analysis on excess returns during these periods
df %>% filter(Date %in% hivol_per_vector) %>% MY_excess_return(.,"FUDP", "TUKXG")
A <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(.,"FUDP", "TUKXG")
B <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "M2EFDY", "GDUEEGF")
C <- df %>% filter(Date %in% hivol_per_vector) %>% MY_excess_return(., "M2EUGDY", "GDDUE15X")
D <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "M2GBDY", "GDDUUK")
E <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "M2JPDY", "TJDIVD")
F1 <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "M2USADVD", "GDDUUS")
G <- df %>% filter(Date %in% hivol_per_vector) %>% MY_excess_return(., "M2WDHDVD", "GDDUWI")
H <- df %>% filter(Date %in% hivol_per_vector) %>% MY_excess_return(., "SPDAEET", "SPTR350E")
I <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "SPDAUDT", "SPXT")
J <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "SPJXDAJT", "TPXDDVD")
K <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "SPSADAZT", "JALSH")
L <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "TJDIVD", "JALSH")
joined_df <- bind_cols(A, B, C, D, E, F1, G, H, I, J, K, L)
compare <- joined_df %>% select(date...1, FUDP, M2EFDY, M2EUGDY, M2GBDY, M2JPDY, M2USADVD, M2WDHDVD, SPDAEET, SPDAUDT, SPJXDAJT, SPSADAZT, TJDIVD) %>% gather(Index , Return , -date...1)
plot <- compare %>% ggplot(aes(x = date...1, y = Return) +
geom_line() +
labs(x = "Date", y = "Return") +
theme_minimal() +
facet_wrap(~ Index, scales = "free_y", ncol = 4))
# retrieve from yahoo
vix <- getSymbols("VIX")
# Turn to tibble
VIX <- VIX %>%
tbl2xts::xts_tbl(.)
VIX <- VIX %>% select(date, VIX.Close) %>%
rename(., close = VIX.Close)
# get rolling volatilty
RollSD <- VIX %>%  arrange(date) %>%
mutate(YM = format(date, "%Y-%b")) %>%
group_by(YM) %>%
mutate(ret = log(close)- lag(log(close))) %>%
mutate(ret = coalesce(ret, 0)) %>%
mutate(RollSD = RcppRoll::roll_sd(1+ret, 12, fill = NA, align = "right") *
sqrt(12)) %>%
ungroup() %>%
filter(!is.na(RollSD)) %>%
select(date, RollSD)
# label and pull dates
strat_df <-
RollSD %>% mutate(topQ = quantile(RollSD, probs = 0.8),
botQ = quantile(RollSD, probs = 0.2),
Strat = ifelse(RollSD >= topQ, "HiVol",
ifelse(RollSD <= botQ, "LowVol", "Normal_Vol")))
#  lets pull dates for the high vol period
hivol_per_vector <- strat_df %>% filter(Strat %in% "HiVol") %>% pull(date)
# use dates to get returns for indexes and benchamrks, I will use the comparison dataframe, that has excess returns to do a crude analysis on excess returns during these periods
df %>% filter(Date %in% hivol_per_vector) %>% MY_excess_return(.,"FUDP", "TUKXG")
A <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(.,"FUDP", "TUKXG")
B <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "M2EFDY", "GDUEEGF")
C <- df %>% filter(Date %in% hivol_per_vector) %>% MY_excess_return(., "M2EUGDY", "GDDUE15X")
D <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "M2GBDY", "GDDUUK")
E <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "M2JPDY", "TJDIVD")
F1 <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "M2USADVD", "GDDUUS")
G <- df %>% filter(Date %in% hivol_per_vector) %>% MY_excess_return(., "M2WDHDVD", "GDDUWI")
H <- df %>% filter(Date %in% hivol_per_vector) %>% MY_excess_return(., "SPDAEET", "SPTR350E")
I <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "SPDAUDT", "SPXT")
J <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "SPJXDAJT", "TPXDDVD")
K <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "SPSADAZT", "JALSH")
L <- df %>%filter(Date %in% hivol_per_vector) %>%  MY_excess_return(., "TJDIVD", "JALSH")
joined_df <- bind_cols(A, B, C, D, E, F1, G, H, I, J, K, L)
compare <- joined_df %>% select(date...1, FUDP, M2EFDY, M2EUGDY, M2GBDY, M2JPDY, M2USADVD, M2WDHDVD, SPDAEET, SPDAUDT, SPJXDAJT, SPSADAZT, TJDIVD) %>% gather(Index , Return , -date...1)
plot <- compare %>% ggplot(., aes(x = date...1, y = Return) +
geom_line() +
labs(x = "Date", y = "Return") +
theme_minimal() +
facet_wrap(~ Index, scales = "free_y", ncol = 4))
compare %>% ggplot(., aes(x = date...1, y = Return)) +
geom_line() +
labs(x = "Date", y = "Return") +
theme_minimal() +
facet_wrap(~ Index, scales = "free_y", ncol = 4)
funds %>% filter(date > fmxdat::safe_year_min(datesel = last(Date), N = 3))
funds
funds_considered <-
funds %>% filter(date >= fmxdat::safe_year_min(datesel = last(Date), N = 3))
funds_considered <-
funds %>% filter(Date >= fmxdat::safe_year_min(datesel = last(Date), N = 3))
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check)
Moments_Comp <- function(funds, BM, Yrs_LookBack, NA_Check){
funds_considered <-
funds %>% filter(Date >= fmxdat::safe_year_min(datesel = last(Date), N = 3))
Funds_Cons <-
funds_considered %>%
group_by(Tickers) %>%
summarise(N_noNA = sum(!is.na(Ret)) / length(unique(funds_considered$Date)) ) %>%
filter(N_noNA > NA_Check) %>% pull(Tickers)
Fundxts <-
funds_considered %>% filter(Tickers %in% Funds_Cons) %>%
tbl2xts::tbl_xts(cols_to_xts = Ret, spread_by = Tickers, Colnames_Exact = T)
BMxts <-
funds_considered %>% filter(Tickers %in% BM) %>%
tbl_xts(cols_to_xts = Ret, Colnames_Exact = T)
library(PerformanceAnalytics)
Moms <-
bind_rows(
data.frame(Return.cumulative(Fundxts) ) %>% round(., 3),
data.frame(Return.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::Return.annualized.excess(Fundxts, BMxts) ) %>% round(., 3),
data.frame(sd.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::AdjustedSharpeRatio( Fundxts ) ) %>% round(., 3),
data.frame(PainIndex(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(AverageDrawdown(Fundxts, scale = 12)) %>% round(., 3),
data.frame(fmxdat::Safe_TE(Ra = Fundxts, Rb = BMxts, scale = 12)) %>% round(., 3),
data.frame(PerformanceAnalytics::InformationRatio(Ra = Fundxts, Rb = BMxts)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta.bull(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta.bear(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::UpDownRatios(Ra = Fundxts, Rb = BMxts, method = "Percent", side = "Up")) %>% round(., 3),
data.frame(PerformanceAnalytics::CVaR(R = Fundxts, p = 0.05, method = "modified")) %>% round(., 3)
) %>%
tibble::rownames_to_column("Info") %>%
mutate(Period = glue::glue("Last {Yrs_LookBack} Years"), Info = c("Cum Returns", "Returns (Ann.)", "Returns Excess (Ann.)", "SD (Ann.)", "Adj. Sharpe Ratio", "Pain Index",
"Avg DD", "Tracking Error", "Information Ratio", "Beta", "Beta Bull", "Beta Bear", "Up-Down Ratio", "Modified CVaR")) %>%
relocate(Period, .before = Info) %>% as_tibble()
# This line replaces the `.` with a space.
# Note the forward slashes, as `.` there means everything, `\\.` means a full-stop
colnames(Moms) <- gsub("\\.", " ", colnames(Moms))
Moms
}
Moments_Comp <- function(funds, BM, Yrs_LookBack, NA_Check){
funds_considered <-
funds %>% filter(Date >= fmxdat::safe_year_min(datesel = last(Date), N = Yrs_LookBack))
Funds_Cons <-
funds_considered %>%
group_by(Tickers) %>%
summarise(N_noNA = sum(!is.na(Ret)) / length(unique(funds_considered$Date)) ) %>%
filter(N_noNA > NA_Check) %>% pull(Tickers)
Fundxts <-
funds_considered %>% filter(Tickers %in% Funds_Cons) %>%
tbl2xts::tbl_xts(cols_to_xts = Ret, spread_by = Tickers, Colnames_Exact = T)
BMxts <-
funds_considered %>% filter(Tickers %in% BM) %>%
tbl_xts(cols_to_xts = Ret, Colnames_Exact = T)
library(PerformanceAnalytics)
Moms <-
bind_rows(
data.frame(Return.cumulative(Fundxts) ) %>% round(., 3),
data.frame(Return.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::Return.annualized.excess(Fundxts, BMxts) ) %>% round(., 3),
data.frame(sd.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::AdjustedSharpeRatio( Fundxts ) ) %>% round(., 3),
data.frame(PainIndex(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(AverageDrawdown(Fundxts, scale = 12)) %>% round(., 3),
data.frame(fmxdat::Safe_TE(Ra = Fundxts, Rb = BMxts, scale = 12)) %>% round(., 3),
data.frame(PerformanceAnalytics::InformationRatio(Ra = Fundxts, Rb = BMxts)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta.bull(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta.bear(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::UpDownRatios(Ra = Fundxts, Rb = BMxts, method = "Percent", side = "Up")) %>% round(., 3),
data.frame(PerformanceAnalytics::CVaR(R = Fundxts, p = 0.05, method = "modified")) %>% round(., 3)
) %>%
tibble::rownames_to_column("Info") %>%
mutate(Period = glue::glue("Last {Yrs_LookBack} Years"), Info = c("Cum Returns", "Returns (Ann.)", "Returns Excess (Ann.)", "SD (Ann.)", "Adj. Sharpe Ratio", "Pain Index",
"Avg DD", "Tracking Error", "Information Ratio", "Beta", "Beta Bull", "Beta Bear", "Up-Down Ratio", "Modified CVaR")) %>%
relocate(Period, .before = Info) %>% as_tibble()
# This line replaces the `.` with a space.
# Note the forward slashes, as `.` there means everything, `\\.` means a full-stop
colnames(Moms) <- gsub("\\.", " ", colnames(Moms))
Moms
}
funds <- readxl::read_xlsx("data/MAD .xlsx")
funds <- funds %>% gather(Tickers, Value, -Date)
BM <- "TUKXG"
Yrs_LookBack <- 5
NA_Check <- 0.8
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers) %>%
mutate(Ret = Value/lag(Value)-1)
funds %>%
gather(Tickers, Value, -Date)
funds
funds <- readxl::read_xlsx("data/MAD .xlsx")
funds
funds %>%
gather(Tickers, Value, -Date)
funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date)
funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers)
funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers) %>%
mutate(Ret = Value/lag(Value)-1)
funds <- funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers) %>%
mutate(Ret = Value/lag(Value)-1)
tail(funds)
plot(funds$Ret)
funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers) %>%
mutate(Ret = Value/lag(Value)-1) %>%
mutate(Ret =coalesce(Ret,0))
funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers) %>%
mutate(Ret = Value/lag(Value)-1)
funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers)
funds <- readxl::read_xlsx("data/MAD .xlsx")
funds <- funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers) %>%
mutate(Ret = Value/lag(Value)-1) %>%
mutate(Ret =coalesce(Ret,0))
funds
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
Moments_Comp <- function(funds, BM, Yrs_LookBack, NA_Check){
funds_considered <-
funds %>% filter(Date >= fmxdat::safe_year_min(datesel = last(Date), N = Yrs_LookBack))
Funds_Cons <-
funds_considered %>%
group_by(Tickers) %>%
summarise(N_noNA = sum(!is.na(Ret)) / length(unique(funds_considered$Date)) ) %>%
filter(N_noNA > NA_Check) %>% pull(Tickers)
Fundxts <-
funds_considered %>% filter(Tickers %in% Funds_Cons) %>%
tbl2xts::tbl_xts(cols_to_xts = Ret, spread_by = Tickers, Colnames_Exact = T)
BMxts <-
funds_considered %>% filter(Tickers %in% BM) %>%
tbl_xts(cols_to_xts = Ret, Colnames_Exact = T)
library(PerformanceAnalytics)
Moms <-
bind_rows(
data.frame(Return.cumulative(Fundxts) ) %>% round(., 3),
data.frame(Return.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::Return.annualized.excess(Fundxts, BMxts) ) %>% round(., 3),
data.frame(sd.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::AdjustedSharpeRatio( Fundxts ) ) %>% round(., 3),
data.frame(PainIndex(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(AverageDrawdown(Fundxts, scale = 12)) %>% round(., 3),
data.frame(fmxdat::Safe_TE(Ra = Fundxts, Rb = BMxts, scale = 12)) %>% round(., 3),
data.frame(PerformanceAnalytics::InformationRatio(Ra = Fundxts, Rb = BMxts)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta.bull(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta.bear(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::UpDownRatios(Ra = Fundxts, Rb = BMxts, method = "Percent", side = "Up")) %>% round(., 3),
data.frame(PerformanceAnalytics::CVaR(R = Fundxts, p = 0.05, method = "modified")) %>% round(., 3)
) %>%
tibble::rownames_to_column("Info") %>%
mutate(Period = glue::glue("Last {Yrs_LookBack} Years"), Info = c("Cum Returns", "Returns (Ann.)", "Returns Excess (Ann.)", "SD (Ann.)", "Adj. Sharpe Ratio", "Pain Index",
"Avg DD", "Tracking Error", "Information Ratio", "Beta", "Beta Bull", "Beta Bear", "Up-Down Ratio", "Modified CVaR")) %>%
relocate(Period, .before = Info) %>% as_tibble()
# This line replaces the `.` with a space.
# Note the forward slashes, as `.` there means everything, `\\.` means a full-stop
colnames(Moms) <- gsub("\\.", " ", colnames(Moms))
Moms
}
Fundselected <- c("FUDP", "M2GBDY")
BM <- "TUKXG"
Yrs_LookBack <- 5
NA_Check <- 0.8
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers) %>%
mutate(Ret = Value/lag(Value)-1) %>%
mutate(Ret =coalesce(Ret,0)) %>%
ungroup()
funds <- readxl::read_xlsx("data/MAD .xlsx")
funds <- funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers) %>%
mutate(Ret = Value/lag(Value)-1) %>%
mutate(Ret =coalesce(Ret,0)) %>%
ungroup()
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
Tab_stats <-
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 1, NA_Check = 0.7)
source("code/Statistics.R")
funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 1, NA_Check = 0.9)
source("code/Statistics.R")
funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 1, NA_Check = 0.9)
funds <- readxl::read_xlsx("data/MAD .xlsx")
funds <- funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers) %>%
mutate(Ret = Value/lag(Value)-1) %>%
mutate(Ret =coalesce(Ret,0)) %>%
ungroup()
funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 1, NA_Check = 0.7)
funds <- readxl::read_xlsx("data/MAD .xlsx")
funds <- funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers) %>%
mutate(Ret = Value/lag(Value)-1) %>%
mutate(Ret =coalesce(Ret,0)) %>%
ungroup()
BM <- "TUKXG"
funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 1, NA_Check = 0.7)
source("code/Statistics.R")
funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 1, NA_Check = 0.9)
funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 3, NA_Check = 0.9)
funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 5, NA_Check = 0.9)
funds <- readxl::read_xlsx("data/MAD .xlsx")
source("code/Statistics.R")
funds <- funds %>%
gather(Tickers, Value, -Date) %>%
arrange(Date) %>% group_by(Tickers) %>%
mutate(Ret = Value/lag(Value)-1) %>%
mutate(Ret =coalesce(Ret,0)) %>%
ungroup()
BM <- "TUKXG"
funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 1, NA_Check = 0.9)
funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 3, NA_Check = 0.9)
funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 5, NA_Check = 0.9)
One_year <- funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 1, NA_Check = 0.9)
Three_year <- funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 3, NA_Check = 0.9)
Five_year <- funds %>% Moments_Comp(., BM = BM, Yrs_LookBack = 5, NA_Check = 0.9)
kable(One_year)
