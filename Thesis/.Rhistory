mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)) %>%
mutate(Daliy_return = coalesce(Daily_return, 0)) %>%
mutate(Compound_index = cumprod(1+ Daily_return)) %>%
mutate(MY = format(Date, "%b%Y")) %>%
group_by(MY) %>%
filter(Date == last(Date)) %>%
mutate(Monthly_return = Compound_index/lag(Compound_index)) %>%
select(Date, Monthly_return)
raw.indexes %>%
arrange(Date) %>%
mutate(MY = format(Date, "%b%Y")) %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)) %>%
mutate(Daliy_return = coalesce(Daily_return, 0)) %>%
mutate(Compound_index = cumprod(1+ Daily_return)) %>%
mutate(MY = format(Date, "%b%Y")) %>%
group_by(MY) %>%
filter(Date == last(Date)) %>%
mutate(Monthly_return = Compound_index/lag(Compound_index))
raw.indexes %>%
arrange(Date) %>%
mutate(MY = format(Date, "%b%Y")) %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level))
raw.indexes %>%
arrange(Date) %>%
mutate(MY = format(Date, "%b%Y")) %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)) %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound_index = cumprod(1 + Daily_return)) %>%
mutate(MY = format(Date, "%b%Y")) %>%
group_by(MY) %>%
filter(Date == last(Date)) %>%
mutate(Monthly_return = Compound_index / lag(Compound_index, default = 1))
compoond.returns <- raw.indexes %>%
arrange(Date) %>%
mutate(MY = format(Date, "%b%Y")) %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)) %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound_index = cumprod(1 + Daily_return)) %>%
mutate(MY = format(Date, "%b%Y")) %>%
group_by(MY) %>%
filter(Date == last(Date)) %>%
mutate(Monthly_return = Compound_index / lag(Compound_index, default = 1))
compoond.returns
raw.indexes %>%
arrange(Date) %>%
mutate(MY = format(Date, "%b%Y")) %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)) %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound_index = cumprod(1 + Daily_return)) %>%
mutate(MY = format(Date, "%b%Y")) %>%
group_by(MY) %>%
filter(Date == last(Date)) %>%
mutate(Monthly_return = Compound_index / lag(Compound_index, default = 1)) %>% select(Date, Index, Monthly_return)
compoond.returns <- raw.indexes %>%
arrange(Date) %>%
mutate(MY = format(Date, "%b%Y")) %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)) %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound_index = cumprod(1 + Daily_return)) %>%
mutate(MY = format(Date, "%b%Y")) %>%
group_by(MY) %>%
filter(Date == last(Date)) %>%
mutate(Monthly_return = Compound_index / lag(Compound_index, default = 1)) %>%
select(Date, Index, Monthly_return)
compoond.returns <- raw.indexes %>%
arrange(Date) %>%
mutate(MY = format(Date, "%b%Y")) %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)) %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound_index = cumprod(1 + Daily_return)) %>%
mutate(MY = format(Date, "%b%Y")) %>%
group_by(MY) %>%
filter(Date == last(Date)) %>%
mutate(Monthly_return = Compound_index / lag(Compound_index, default = 1))
compoond.returns%>%
select(Date, Index, Monthly_return)
compoond.returns%>%
select(Date, Index, Monthly_return)
raw.indexes %>%
arrange(Date) %>%
mutate(MY = format(Date, "%b%Y")) %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)) %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound_index = cumprod(1 + Daily_return)) %>%
mutate(MY = format(Date, "%b%Y")) %>%
group_by(MY) %>%
filter(Date == last(Date)) %>%
mutate(Monthly_return = Compound_index / lag(Compound_index, default = 1))
compoond.returns%>%
select(Date, Index, Monthly_return)
compoond.returns
compoond.returns <- compoond.returns %>%
select(Date, Index, Monthly_return)
compoond.returns
compoond.returns %>%  ggplot(., aes(x = Date, y = Monthly_return, group = Index )) +
geom_line(aes(y = Monthly_return * 100, color = Index), size = 1, linetype = "dashed") +
labs(x = "Date", y = "Value", title = "Compound Index and Monthly Return") +
scale_color_discrete(name = "Instrument") +
scale_linetype_manual(values = c("solid", "dashed")) +
facet_wrap(~ MY, ncol = 4) +
theme_minimal()
compoond.returns %>% ggplot(., aes(x = Date, y = Monthly_return, group = Index)) +
geom_line(aes(y = Monthly_return * 100), size = 1, linetype = "dashed") +
labs(x = "Date", y = "Value", title = "Compound Index and Monthly Return") +
scale_linetype_manual(values = c("solid", "dashed")) +
facet_wrap(~ MY) +
theme_minimal()
compoond.returns %>% ggplot(., aes(x = Date, y = Monthly_return, group = Index)) +
geom_line(aes(y = Monthly_return * 100), size = 1, linetype = "dashed") +
labs(x = "Date", y = "Value", title = "Compound Index and Monthly Return") +
scale_linetype_manual(values = c("solid", "dashed")) +
facet_wrap(~ Index) +
theme_minimal()
compoond.returns %>% ggplot(., aes(x = Date, y = Monthly_return, group = Index)) +
geom_line() +
labs(x = "Date", y = "Value", title = "Compound Index and Monthly Return") +
scale_linetype_manual(values = c("solid", "dashed")) +
facet_wrap(~ Index) +
theme_minimal()
compoond.returns %>% ggplot(., aes(x = Date, y = Monthly_return) +
geom_line() +
labs(x = "Date", y = "Value", title = "Compound Index and Monthly Return") +
scale_linetype_manual(values = c("solid", "dashed")) +
facet_wrap() +
theme_minimal()
compoond.returns %>% ggplot(., aes(x = Date, y = Monthly_return) +
compoond.returns %>%
ggplot()+
geom_line(., aes(x= Date, y = Monthly_Return))
compoond.returns %>%
ggplot(., aes(x= Date, y = Monthly_Return))
compoond.returns
compoond.returns %>%
ggplot(., aes(x= Date, y = Monthly_return))+
geom_line()
compoond.returns %>%
ggplot(., aes(x= Date, y = Monthly_return, group = Index))+
geom_line()
raw.indexes %>%
arrange(Date)  %>%
gather(Index, Level, -Date)
pacman::p_load("xts", "tidyverse", "tbl2xts", "PerformanceAnalytics",
"lubridate", "glue")
library(tbl2xts)
library(tidyverse)
library(xts)
# Load the data
raw.indexes <- readxl::read_xlsx("data/Benckmarks.xlsx")
# Tidy the data and get simple returns
compoond.returns <- raw.indexes %>%
arrange(Date)  %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)) %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound_index = cumprod(1 + Daily_return)) %>%
mutate(MY = format(Date, "%b%Y")) %>%
group_by(MY) %>%
filter(Date == last(Date)) %>%
mutate(Monthly_return = Compound_index / lag(Compound_index, default = 1))
compoond.returns <- compoond.returns %>%
select(Date, Index, Monthly_return)
# plot it
compoond.returns
compoond.returns <- raw.indexes %>%
arrange(Date)  %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)) %>%
ungroup()
compoond.returns %>%
mutate(Compound_index = cumprod(1 + Level)) %>%
mutate(MY = format(Date, "%b%Y")) %>%
group_by(MY) %>%
filter(Date == last(Date)) %>%
mutate(Monthly_return = Compound_index / lag(Compound_index, default = 1))
compoond.returns <- raw.indexes %>%
arrange(Date)  %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)) %>%
ungroup()
compoond.returns
compoond.returns %>%
mutate(Compound_index = cumprod(1 + Level))
compoond.returns %>%
arrange(Date) %>%
mutate(Daily_index = cumprod(1 + Level)) %>%
mutate(MY = format(Date, "%b%Y")) %>%
group_by(MY) %>%
filter(Date == last(Date)) %>%
mutate(Monthly_return = Compound_index / lag(Compound_index, default = 1))
compoond.returns %>%
arrange(Date) %>%
mutate(Daily_index = cumprod(1 + Level))
compoond.returns %>%
group_by(Index) %>%
mutate(Daily_index = cumprod(1 + Level)) %>%
mutate(MY = format(Date, "%b%Y")) %>%
group_by(MY) %>%
filter(Date == last(Date))
compoond.returns %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound = cumprod(1+Daily_return))
compoond.returns %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound = cumprod(1+Daily_return)) %>%
mutate( YM = format(Date, "%Y%b"))
compoond.returns %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound = cumprod(1+Daily_return)) %>%
mutate( YM = format(Date, "%Y%b")) %>%
group_by(YM )
compoond.returns %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound = cumprod(1+Daily_return)) %>%
mutate( YM = format(Date, "%Y%b")) %>%
group_by(YM ) %>%
filter(Date = last(Date))
compoond.returns %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound = cumprod(1+Daily_return)) %>%
mutate( YM = format(Date, "%Y%b")) %>%
group_by(YM ) %>%
filter(Date == last(Date))
compoond.returns %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound = cumprod(1+Daily_return)) %>%
mutate( YM = format(Date, "%Y%b")) %>%
group_by(YM ) %>%
filter(Date == last(Date)) %>%
group(Index)
compoond.returns %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound = cumprod(1+Daily_return)) %>%
mutate( YM = format(Date, "%Y%b")) %>%
group_by(YM ) %>%
filter(Date == last(Date)) %>%
group_by(Index)
compoond.returns <-  compoond.returns %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound = cumprod(1+Daily_return)) %>%
mutate( YM = format(Date, "%Y%b")) %>%
group_by(YM ) %>%
filter(Date == last(Date)) %>%
group_by(Index)
compoond.returns
compoond.returns <-  compoond.returns %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound = cumprod(1+Daily_return)) %>%
mutate( YM = format(Date, "%Y%b")) %>%
group_by(YM ) %>%
filter(Date == last(Date)) %>%
group_by(Index) %>%
select(Date, Index, Compound) %>%
ungroup()
compoond.returns
compoond.returns %>%
ggplot(., aes(x = Date, y = Compound, group = Index)) +
geom_line() +
facet_wrap(~ Index) +
labs(x = "Date", y = "Price Return", title = "Price Returns for Indexes") +
theme_minimal() +
theme(legend.position = "none")
compoond.returns <- raw.indexes %>%
arrange(Date)  %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)-1) %>%
ungroup()
compoond.returns <-  compoond.returns %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound = cumprod(1+Daily_return)) %>%
mutate( YM = format(Date, "%Y%b")) %>%
group_by(YM ) %>%
filter(Date == last(Date)) %>%
group_by(Index) %>%
select(Date, Index, Compound) %>%
ungroup()
compoond.returns %>%
ggplot(., aes(x = Date, y = Compound, group = Index)) +
geom_line() +
facet_wrap(~ Index) +
labs(x = "Date", y = "Price Return", title = "Price Returns for Indexes") +
theme_minimal() +
theme(legend.position = "none")
compoond.returns
compoond.returns <-  compoond.returns %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound = cumprod(1+Daily_return)) %>%
mutate( YM = format(Date, "%Y%b")) %>%
filter(Date > lubridate::ymd(20130110)) %>%
group_by(YM ) %>%
filter(Date == last(Date)) %>%
group_by(Index) %>%
select(Date, Index, Compound) %>%
ungroup()
compoond.returns <- raw.indexes %>%
arrange(Date)  %>%
gather(Index, Level, -Date) %>%
group_by(Index) %>%
mutate(Level = as.numeric(Level),
Daily_return = Level / lag(Level)-1) %>%
ungroup()
compoond.returns <-  compoond.returns %>%
mutate(Daily_return = coalesce(Daily_return, 0)) %>%
mutate(Compound = cumprod(1+Daily_return)) %>%
mutate( YM = format(Date, "%Y%b")) %>%
filter(Date > lubridate::ymd(20130110)) %>%
group_by(YM ) %>%
filter(Date == last(Date)) %>%
group_by(Index) %>%
select(Date, Index, Compound) %>%
ungroup()
compoond.returns %>%
ggplot(., aes(x = Date, y = Compound, group = Index)) +
geom_line() +
facet_wrap(~ Index) +
labs(x = "Date", y = "Price Return", title = "Price Returns for Indexes") +
theme_minimal() +
theme(legend.position = "none")
raw.indexes %>%
arrange(Date)  %>%
gather(Tickers, Level, -Date) %>%
group_by(Tickers) %>%
mutate(Level = as.numeric(Level),
Ret = Level / lag(Level)-1) %>%
select(Date, Tickers, Ret) %>%
ungroup()
raw.indexes %>%
arrange(Date)  %>%
gather(Tickers, Level, -Date) %>%
group_by(Tickers) %>%
mutate(Level = as.numeric(Level),
Ret = Level / lag(Level)-1) %>%
select(Date, Tickers, Ret) %>%
ungroup()
indexes <- raw.indexes %>%
arrange(Date)  %>%
gather(Tickers, Level, -Date) %>%
group_by(Tickers) %>%
mutate(Level = as.numeric(Level),
Ret = Level / lag(Level)-1) %>%
select(Date, Tickers, Ret) %>%
ungroup()
Moments_Comp <- function(funds, BM, Yrs_LookBack, NA_Check){
funds_considered <-
funds %>% filter(date >= fmxdat::safe_year_min(datesel = last(date), N = Yrs_LookBack))
Funds_Cons <-
funds_considered %>%
group_by(Tickers) %>%
summarise(N_noNA = sum(!is.na(Ret)) / length(unique(funds_considered$date)) ) %>%
filter(N_noNA > NA_Check) %>% pull(Tickers)
Fundxts <-
funds_considered %>% filter(Tickers %in% Funds_Cons) %>%
tbl_xts(cols_to_xts = Ret, spread_by = Tickers, Colnames_Exact = T)
BMxts <-
funds_considered %>% filter(Tickers %in% BM) %>%
tbl_xts(cols_to_xts = Ret, Colnames_Exact = T)
library(PerformanceAnalytics)
Moms <-
bind_rows(
data.frame(Return.cumulative(Fundxts) ) %>% round(., 3),
data.frame(Return.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::Return.annualized.excess(Fundxts, BMxts) ) %>% round(., 3),
data.frame(sd.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::AdjustedSharpeRatio( Fundxts ) ) %>% round(., 3),
data.frame(PainIndex(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(AverageDrawdown(Fundxts, scale = 12)) %>% round(., 3),
data.frame(fmxdat::Safe_TE(Ra = Fundxts, Rb = BMxts, scale = 12)) %>% round(., 3),
data.frame(PerformanceAnalytics::InformationRatio(Ra = Fundxts, Rb = BMxts)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta.bull(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::CAPM.beta.bear(Ra = Fundxts, Rb = BMxts, Rf = 0)) %>% round(., 3),
data.frame(PerformanceAnalytics::UpDownRatios(Ra = Fundxts, Rb = BMxts, method = "Percent", side = "Up")) %>% round(., 3),
data.frame(PerformanceAnalytics::CVaR(R = Fundxts, p = 0.05, method = "modified")) %>% round(., 3)
) %>%
tibble::rownames_to_column("Info") %>%
mutate(Period = glue::glue("Last {Yrs_LookBack} Years"), Info = c("Cum Returns", "Returns (Ann.)", "Returns Excess (Ann.)", "SD (Ann.)", "Adj. Sharpe Ratio", "Pain Index",
"Avg DD", "Tracking Error", "Information Ratio", "Beta", "Beta Bull", "Beta Bear", "Up-Down Ratio", "Modified CVaR")) %>%
relocate(Period, .before = Info) %>% as_tibble()
# This line replaces the `.` with a space.
# Note the forward slashes, as `.` there means everything, `\\.` means a full-stop
colnames(Moms) <- gsub("\\.", " ", colnames(Moms))
Moms
}
raw.indexes %>% gather(Tickers, Lev, -Date) %>% select(Ticker) %>% names()
raw.indexes %>% gather(Tickers, Lev, -Date) %>% select(Tickers) %>% names()
raw.indexes %>% gather(Tickers, Lev, -Date) %>% names()
raw.indexes  %>% names()
Fundselected <- c("SPSADAZT", "JALSH")
Tab_stats <-
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
funds <- raw.indexes %>%
arrange(Date)  %>%
gather(Tickers, Level, -Date) %>%
group_by(Tickers) %>%
mutate(Level = as.numeric(Level),
Ret = Level / lag(Level)-1) %>%
select(Date, Tickers, Ret) %>%
ungroup()
Fundselected <- c("SPSADAZT", "JALSH")
Tab_stats <-
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
Moments_Comp <- function(funds, BM, Yrs_LookBack, NA_Check){
funds_considered <-
funds %>% filter(date >= fmxdat::safe_year_min(datesel = last(date), N = Yrs_LookBack))
Funds_Cons <-
funds_considered %>%
group_by(Tickers) %>%
summarise(N_noNA = sum(!is.na(Ret)) / length(unique(funds_considered$date)) ) %>%
filter(N_noNA > NA_Check) %>% pull(Tickers)
Fundxts <-
funds_considered %>% filter(Tickers %in% Funds_Cons) %>%
tbl_xts(cols_to_xts = Ret, spread_by = Tickers, Colnames_Exact = T)
BMxts <-
funds_considered %>% filter(Tickers %in% BM) %>%
tbl_xts(cols_to_xts = Ret, Colnames_Exact = T)
library(PerformanceAnalytics)
Moms <-
bind_rows(
data.frame(Return.cumulative(Fundxts) ) %>% round(., 3),
data.frame(Return.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::Return.annualized.excess(Fundxts, BMxts) ) %>% round(., 3),
data.frame(sd.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
) %>%
tibble::rownames_to_column("Info") %>%
mutate(Period = glue::glue("Last {Yrs_LookBack} Years"), Info = c("Cum Returns", "Returns (Ann.)", "Returns Excess (Ann.)", "SD (Ann.)")) %>%
relocate(Period, .before = Info) %>% as_tibble()
# This line replaces the `.` with a space.
# Note the forward slashes, as `.` there means everything, `\\.` means a full-stop
colnames(Moms) <- gsub("\\.", " ", colnames(Moms))
Moms
}
Fundselected <- c("SPSADAZT", "JALSH")
Tab_stats <-
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
Moments_Comp <- function(funds, BM, Yrs_LookBack, NA_Check){
funds_considered <-
funds %>% filter(date >= fmxdat::safe_year_min(datesel = last(date), N = Yrs_LookBack))
Funds_Cons <-
funds_considered %>%
group_by(Tickers) %>%
summarise(N_noNA = sum(!is.na(Ret)) / length(unique(funds_considered$date)) ) %>%
filter(N_noNA > NA_Check) %>% pull(Tickers)
Fundxts <-
funds_considered %>% filter(Tickers %in% Funds_Cons) %>%
tbl_xts(cols_to_xts = Ret, spread_by = Tickers, Colnames_Exact = T)
BMxts <-
funds_considered %>% filter(Tickers %in% BM) %>%
tbl_xts(cols_to_xts = Ret, Colnames_Exact = T)
library(PerformanceAnalytics)
Moms <-
bind_rows(
data.frame(Return.cumulative(Fundxts) ) %>% round(., 3),
data.frame(Return.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3),
data.frame(PerformanceAnalytics::Return.annualized.excess(Fundxts, BMxts) ) %>% round(., 3),
data.frame(sd.annualized(Fundxts, scale = 12, geometric = T)) %>% round(., 3)
) %>%
tibble::rownames_to_column("Info") %>%
mutate(Period = glue::glue("Last {Yrs_LookBack} Years"), Info = c("Cum Returns", "Returns (Ann.)", "Returns Excess (Ann.)", "SD (Ann.)")) %>%
relocate(Period, .before = Info) %>% as_tibble()
# This line replaces the `.` with a space.
# Note the forward slashes, as `.` there means everything, `\\.` means a full-stop
colnames(Moms) <- gsub("\\.", " ", colnames(Moms))
Moms
}
Fundselected <- c("SPSADAZT", "JALSH")
Tab_stats <-
bind_rows(
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 3, NA_Check),
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
)
Moments_Comp(funds %>% filter(Tickers %in% Fundselected), BM, Yrs_LookBack = 5, NA_Check)
