geom_line() +
geom_text(data = subset(Index_cumulative_return, Year == max(Year)),
aes(label = round(Cumulative_Return, 2)),
hjust = 1.2, vjust = 0.5, color = "black") +
geom_text(data = subset(Index_cumulative_return, Year == max(Year)),
aes(label = Index), hjust = -1, vjust = -0.5, color = "black") +
facet_wrap(~ Index, scales = "free_y") +
xlab("Year") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
scale_x_discrete(labels = Index_cumulative_return$Index)
ggplot(Index_cumulative_return, aes(x = Year, y = Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete()  # Optional: Use a discrete color scale
ggplot(Index_cumulative_return, aes(x = Year, y = Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none",  # Remove the legend
plot.title = element_text(hjust = 0.5),  # Center-align the plot title
axis.title.y = element_blank(),  # Remove the y-axis label
axis.text.y = element_blank(),  # Remove the y-axis tick labels
axis.ticks.y = element_blank(),  # Remove the y-axis ticks
plot.margin = margin(20, 20, 50, 20)
ggplot(Index_cumulative_return, aes(x = Year, y = Cumulative_Return, color = Index, group = Index)) +
ggplot(Index_cumulative_return, aes(x = Year, y = Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index")
g <- ggplot(Index_cumulative_return, aes(x = Year, y = Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index")
g <- g + annotate("text", x = Inf, y = Inf, label = levels(Index_cumulative_return$Index), hjust = 1, vjust = 1)
g
ggplot(Index_cumulative_return, aes(x = Year, y = Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none"  # Remove the legend
# strip.background = element_blank(),  # Remove the facet labels background
# strip.text = element_blank()  # Remove the facet labels
)
Smaller <- Tidy_df %>% filter(Year<2013-31-12)
Index_cumulative_return <- cumulative_returns_year(Smaller)
Index_cumulative_return$Year <- as.character(Index_cumulative_return$Year)
ggplot(Index_cumulative_return, aes(x = Year, y = Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none"  # Remove the legend
# strip.background = element_blank(),  # Remove the facet labels background
# strip.text = element_blank()  # Remove the facet labels
)
Smaller <- Tidy_df %>% filter(Year>2010-12-31)
Index_cumulative_return <- cumulative_returns_year(Smaller)
Index_cumulative_return$Year <- as.character(Index_cumulative_return$Year)
library(ggplot2)
g <- ggplot(Index_cumulative_return, aes(x = Year, y = Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none"  # Remove the legend
# strip.background = element_blank(),  # Remove the facet labels background
# strip.text = element_blank()  # Remove the facet labels
)
g
Tidy_df <- Tidy_Monthly_returns_year(df_1)
Smaller <- Tidy_df %>% filter(Year)
Tidy_df <- Tidy_Monthly_returns_year(df_1)
Smaller <- Tidy_df %>% filter(Year)
View(Tidy_df)
df_1 <- Date_wragler_Year(df = Dividend_portfolios)
Tidy_df <- Tidy_Monthly_returns_year(df_1)
Smaller <- Tidy_df %>% filter(Year> 2010 )
Index_cumulative_return <- cumulative_returns_year(Smaller)
Index_cumulative_return$Year <- as.character(Index_cumulative_return$Year)
ggplot(Index_cumulative_return, aes(x = Year, y = Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none"  # Remove the legend
# strip.background = element_blank(),  # Remove the facet labels background
# strip.text = element_blank()  # Remove the facet labels
)
Dividend_portfolios
f_1
df_1 <- Date_wragler_Year(df = Dividend_portfolios)
df_1
Tidy_df <- Tidy_Monthly_returns_year(df_1)
Tidy_df
Smaller <- Tidy_df %>% filter(Year== 2019 )
Index_cumulative_return <- cumulative_returns_year(Smaller)
Index_cumulative_return$Year <- as.character(Index_cumulative_return$Year)
g <- ggplot(Index_cumulative_return, aes(x = Year, y = Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none"  # Remove the legend
# strip.background = element_blank(),  # Remove the facet labels background
# strip.text = element_blank()  # Remove the facet labels
)
g
rm(list = ls()) # Clean your environment:
gc() # garbage collection - It can be useful to call gc after a large object has been removed, as this may prompt R to return memory to the operating system.
library(tidyverse)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
source("code/Return_formulas.R")
Dividend_portfolios <- readxl::read_xlsx("data/Systematic.xlsx")
Dividend_portfolios <- Dividend_portfolios %>%
rename(
MSCI_EM_HDY_GR = M2EFDY,
FTSE_100_TR_GBP = TUKXG,
MSCI_Daily_TR_Gross_EM_USD = GDUEEGF,
MSCI_UK_HDY_GR = M2GBDY,
MSCI_Daily_TR_Gross_UK_U = GDDUUK,
MSCI_JAPAN_HDY_GR = M2JPDY,
MSCI_Daily_TR_Gross_Europe_Ex = M2JPDY,
MSCI_USA_HDY_GR = M2USADVD,
MSCI_WORLD_HDY_GR = M2WDHDVD...12,
MSCI_Daily_TR_Gross_USA_USD = GDDUUS...13,
MSCI_Daily_TR_Gross_World_USD = GDDUWI,
`S&P_EUpe_350_Dvd_Aris_TR` = SPDAEET,
`S&P_Europe_350_Gross_TR` = SPTR350E,
`S&P/JPX_Dvd_Arist_TR` = SPJXDAJT,
`S&P_500_Div_Aristocrt_TR` = SPDAUDT,
`S&P_500_Total_Return` = SPXT,
`TOPIX_TR_Index` = TPXDDVD,
`S&P_SAf_DvdArist_ZAR_GTR` = SPSADAZT,
`FTSE/JSE_AllShr_Tot_Rtn` = JALSH,
`FTSE/JSE_DIVIDEND_TR` = TJDIVD
)
install.packages("PerformanceAnalytics")
source("code/Return_formulas.R")
df_1 <- Date_wragler(Dividend_portfolios)
library(tidyverse)
df_1 <- Date_wragler(Dividend_portfolios)
df_2 <- Tidy_Monthly_returns(df_1)
df_2
cumulative_returns <- function(df) {
df <- df %>%
group_by( MonthYear, Index  ) %>%
summarise(Cumulative_Return = cumprod(1 + Return) - 1)
ungroup()
df}
source("code/Return_formulas.R")
df_3 <- cumulative_returns(df_2)
View(cumulative_returns)
source("code/Return_formulas.R")
df_3 <- cumulative_returns(df_2)
df_3
plot(df_3, x = MonthYear, y = Cumulative_return, Varible = Index, Title = "Monthly Returns"  )
View(plot)
plot(df_3, x = MonthYear, y = Cumulative_return, Varible = Inde,  Title= Monthly Returns)
View(plot)
plot <- function(df, x, y, Varible){
ggplot(df, aes(x = x, y =y, color = Variable , group = Variable)) +
geom_line() +
facet_wrap(~ Variable, scales = "free_y") +
xlab("x") +
ylab("y") +
ggtitle("Monthly Returns") +
scale_color_discrete() }
plot(df_3, x = MonthYear, y = Cumulative_return, Varible = Index)
source("code/Return_formulas.R")
plot(df_3, x = MonthYear, y = Cumulative_return, Varible = Index)
View(plot)
plot <- function(df, x, y, Varible){
ggplot(df, aes(x = x, y =y, color = Variable , group = Variable)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("x") +
ylab("y") +
ggtitle("Monthly Returns") +
scale_color_discrete() }
plot(df_3, x = MonthYear, y = Cumulative_return, Varible = Index)
plot(df_3, x = "MonthYear", y = Cumulative_return, Varible = Index)
plot(df_3, x = "MonthYear", y = "Cumulative_return", Varible = Index)
plot(df_3, x = "MonthYear", y = "Cumulative_return", Varible = "Index")
View(cumulative_returns_year)
plot <- function(df, x, y, Varible){
ggplot(df, aes(x = x, y =y, color = Index , group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("x") +
ylab("y") +
ggtitle("Monthly Returns") +
scale_color_discrete() }
plot(df_3, x = "MonthYear", y = "Cumulative_return")
plot <- function(df, x, y, Varible){
ggplot(df, aes(x = x, y =y, color = Index , group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("x") +
ylab("y") +
ggtitle("Monthly Returns") +
scale_color_discrete()+theme(
legend.position = "none",  # Remove the legend
strip.background = element_blank(),  # Remove the facet labels background
strip.text = element_blank()) } # Remove the fac
plot(df_3, x = "MonthYear", y = "Cumulative_return")
ggplot(., aes(MonthYear, Cumulative_Return, color = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none",  # Remove the legend
strip.background = element_blank(),  # Remove the facet labels background
strip.text = element_blank()  # Remove the facet labels
df_3 <- cumulative_returns(df_2) %>% ungroup()
cumulative_returns(df_2) %>% ungroup()
df_3 <- cumulative_returns(df_2) %>% ungroup()
df_3
ggplot(., aes(MonthYear, Cumulative_Return, color = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none",  # Remove the legend
strip.background = element_blank(),  # Remove the facet labels background
strip.text = element_blank()  # Remove the facet labels
ggplot(aes(MonthYear, Cumulative_Return, color = Index)) +
df_3 %>%
ggplot(aes(MonthYear, Cumulative_Return, color = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none",  # Remove the legend
strip.background = element_blank()  # Remove the facet labels background
)
ggplot(aes(MonthYear, Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none",  # Remove the legend
strip.background = element_blank()  # Remove the facet labels background
)
df_3 %>%
ggplot(aes(MonthYear, Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none",  # Remove the legend
strip.background = element_blank()  )#
df_3 <- df_3 %>% filter(MonthYear > Jan12)
df_3 <- df_3 %>% filter(MonthYear > Jan13)
df_3 <- df_3 %>% filter(MonthYear > Apr13)
df_3
df_3 <- df_3 %>% filter(MonthYear > Dec08)
df_3 <- df_3 %>% filter(MonthYear > "Dec08")
df_3 %>%
ggplot(aes(MonthYear, Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none",  # Remove the legend
strip.background = element_blank()  )# Remove the facet labels background
df_3 <- df_3 %>% filter(MonthYear > "Dec13")
df_3 <- df_3 %>% filter(MonthYear > "Dec15")
df_3 <- df_3 %>% filter(MonthYear > "Dec19")
df_3 %>%
ggplot(aes(MonthYear, Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none",
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
scale_x_discrete(breaks = seq(min(df_3$MonthYear), max(df_3$MonthYear), by = 5))
)
df_3 %>%
ggplot(aes(MonthYear, Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none",
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
ggplot() +
geom_line(aes(MonthYear,Cumulative_return, group = Index)) +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete()
df_3 %>%
df_3 %>%
ggplot() +
geom_line(aes(MonthYear,Cumulative_return, group = Index)) +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index")
df_3
df_3 %>%
ggplot() +
geom_line(aes(MonthYear,Cumulative_Return, group = Index)) +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index")
df_3 %>%
ggplot() +
geom_line(aes(MonthYear,Cumulative_Return, group = Index , color = Index )) +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index")
df_3 %>%
ggplot() +
geom_line(aes(MonthYear,Cumulative_Return, group = Index , color = Index )) +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index")=
theme(legend.background = FALSE)
df_3 %>%
ggplot() +
geom_line(aes(MonthYear,Cumulative_Return, group = Index , color = Index )) +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index")+
theme(legend.background = FALSE)
df_3 %>%
ggplot() +
geom_line(aes(MonthYear,Cumulative_Return, group = Index , color = Index )) +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index")+
theme(legend.position = "none")
df_3 %>%
ggplot() +
geom_smooth(aes(MonthYear,Cumulative_Return, group = Index , color = Index )) +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index")+
theme(legend.position = "none")
df_3 %>%
ggplot(aes(MonthYear, Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none",
strip.background = element_blank(),
strip.text = element_text(hjust = 0.5, margin = margin(b = 10)),
axis.text.x = element_text(angle = 45, hjust = 1),
scale_x_continuous(breaks = seq(min(df_3$MonthYear), max(df_3$MonthYear), by = 5))
)
df_3 %>%
ggplot(aes(MonthYear, Cumulative_Return, color = Index, group = Index)) +
geom_line() +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index") +
scale_color_discrete() +
theme(
legend.position = "none",
strip.background = element_blank(),
strip.text = element_text(hjust = 0.5, margin = margin(b = 10)),
axis.text.x = element_text(angle = 45, hjust = 1)
)
rm(list = ls()) # Clean your environment:
gc() # garbage collection - It can be useful to call gc after a large object has been removed, as this may prompt R to return memory to the operating system.
library(tidyverse)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
source("code/Return_formulas.R")
Dividend_portfolios <- readxl::read_xlsx("data/Systematic.xlsx")
Dividend_portfolios <- Dividend_portfolios %>%
rename(
MSCI_EM_HDY_GR = M2EFDY,
FTSE_100_TR_GBP = TUKXG,
MSCI_Daily_TR_Gross_EM_USD = GDUEEGF,
MSCI_UK_HDY_GR = M2GBDY,
MSCI_Daily_TR_Gross_UK_U = GDDUUK,
MSCI_JAPAN_HDY_GR = M2JPDY,
MSCI_Daily_TR_Gross_Europe_Ex = M2JPDY,
MSCI_USA_HDY_GR = M2USADVD,
MSCI_WORLD_HDY_GR = M2WDHDVD...12,
MSCI_Daily_TR_Gross_USA_USD = GDDUUS...13,
MSCI_Daily_TR_Gross_World_USD = GDDUWI,
`S&P_EUpe_350_Dvd_Aris_TR` = SPDAEET,
`S&P_Europe_350_Gross_TR` = SPTR350E,
`S&P/JPX_Dvd_Arist_TR` = SPJXDAJT,
`S&P_500_Div_Aristocrt_TR` = SPDAUDT,
`S&P_500_Total_Return` = SPXT,
`TOPIX_TR_Index` = TPXDDVD,
`S&P_SAf_DvdArist_ZAR_GTR` = SPSADAZT,
`FTSE/JSE_AllShr_Tot_Rtn` = JALSH,
`FTSE/JSE_DIVIDEND_TR` = TJDIVD
)
# Date wrangling
df_1 <- Date_wragler(Dividend_portfolios)
# get tidy monthly returns
df_2 <- Tidy_Monthly_returns(df_1)
# get cum returns
df_3 <- cumulative_returns(df_2) %>% ungroup()
df_3 <- df_3 %>% filter(MonthYear > "Dec19")
#  graphing
df_3 %>%
ggplot() +
geom_smooth(aes(MonthYear,Cumulative_Return, group = Index , color = Index )) +
facet_wrap(~ Index, scales = "free_y") +
xlab("MonthYear") +
ylab("Cumulative Return") +
ggtitle("Cumulative Returns by Index")+
theme(legend.position = "none")
rm(list = ls()) # Clean your environment:
gc() # garbage collection - It can be useful to call gc after a large object has been removed, as this may prompt R to return memory to the operating system.
# Set CRAN mirror
chooseCRANmirror()
library(tidyverse)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
source("code/Return_formulas.R")
Dividend_portfolios <- readxl::read_xlsx("data/Systematic.xlsx")
Dividend_portfolios <- Dividend_portfolios %>%
rename(
MSCI_EM_HDY_GR = M2EFDY,
FTSE_100_TR_GBP = TUKXG,
MSCI_Daily_TR_Gross_EM_USD = GDUEEGF,
MSCI_UK_HDY_GR = M2GBDY,
MSCI_Daily_TR_Gross_UK_U = GDDUUK,
MSCI_JAPAN_HDY_GR = M2JPDY,
MSCI_Daily_TR_Gross_Europe_Ex = M2JPDY,
MSCI_USA_HDY_GR = M2USADVD,
MSCI_WORLD_HDY_GR = M2WDHDVD...12,
MSCI_Daily_TR_Gross_USA_USD = GDDUUS...13,
MSCI_Daily_TR_Gross_World_USD = GDDUWI,
`S&P_EUpe_350_Dvd_Aris_TR` = SPDAEET,
`S&P_Europe_350_Gross_TR` = SPTR350E,
`S&P/JPX_Dvd_Arist_TR` = SPJXDAJT,
`S&P_500_Div_Aristocrt_TR` = SPDAUDT,
`S&P_500_Total_Return` = SPXT,
`TOPIX_TR_Index` = TPXDDVD,
`S&P_SAf_DvdArist_ZAR_GTR` = SPSADAZT,
`FTSE/JSE_AllShr_Tot_Rtn` = JALSH,
`FTSE/JSE_DIVIDEND_TR` = TJDIVD
)
install.packages("PerformanceAnalytics")
