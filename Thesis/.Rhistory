moments(rets, "M2WDHDVD...12", "GDDUWI"),
moments(rets, "SPDAEET", "SPTR350E"),
results <-  moments(rets, "SPDAUDT", "SPXT"),
moments(rets, "SPJXDAJT", "TPXDDVD"),
moments(rets, "SPSADAZT", "JALSH"),
moments(rets, "TJDIVD", "JALSH"))
saveRDS(excess.returns.te, "data/moments.rds")
# cumulative return function
cumulative_series <- function(df, index_name, bm_name){
cumul <- df %>%
filter(index %in% c(index_name, bm_name)) %>%
pivot_wider(names_from = index, values_from = ret) %>%
rename(ind = index_name, bm = bm_name) %>%
mutate(excess_return = ind - bm) %>%
select(date, excess_return) %>%
mutate(roi = cumprod(1 + excess_return)) %>%
select(-excess_return) %>%
rename(!!glue::glue("{index_name}_roi") := roi)
cumul
}
a <- cumulative_series(rets, "FUDP", "TUKXG")
b <- cumulative_series(rets, "M2GBDY", "GDDUUK")
c <- cumulative_series(rets, "M2WDHDVD...12", "GDDUWI")
d <- cumulative_series(rets, "SPDAEET", "SPTR350E")
e <- cumulative_series(rets, "SPDAUDT", "SPXT")
f <- cumulative_series(rets, "SPJXDAJT", "TPXDDVD")
g <- cumulative_series(rets, "SPSADAZT", "JALSH")
h <- cumulative_series(rets, "TJDIVD", "JALSH")
# convert to list then provide in a single df
cumulative_returns <- list(a, b, c, d, e, f, g, h) %>%
reduce(inner_join, by = 'date') %>%
gather(index, "Excess Cumu", -date) %>%
mutate(index = str_remove(index, "_roi"))
saveRDS(cumulative_returns, "data/cumulative.rds")
# get excess
excess_series <- function(df, index_name, bm_name){
cumul <- df %>%
filter(index %in% c(index_name, bm_name)) %>%
pivot_wider(names_from = index, values_from = ret) %>%
rename(ind = {{index_name}}, bm = {{bm_name}}) %>%
mutate(excess_return = ind - bm) %>%
select(date, excess_return) %>%
rename(!!glue::glue("{index_name}" ):= excess_return)
cumul
}
# get the excess return df
a <- excess_series(rets, "FUDP", "TUKXG")
b <- excess_series(rets, "M2GBDY", "GDDUUK")
c <- excess_series(rets, "M2WDHDVD...12", "GDDUWI")
d <- excess_series(rets, "SPDAEET", "SPTR350E")
e <- excess_series(rets, "SPDAUDT", "SPXT")
f <- excess_series(rets, "SPJXDAJT", "TPXDDVD")
g <- excess_series(rets, "SPSADAZT", "JALSH")
h <- excess_series(rets, "TJDIVD", "JALSH")
# convert to list then provide in a single df
excess_returns <- list(a, b, c, d, e, f, g, h) %>%
reduce(inner_join, by = 'date') %>%
gather(index, "Excess", -date)
name_mapping <- excess_returns %>%  mutate(
Country = case_when(
index == "FUDP" ~ "US",
index == "M2GBDY" ~ "UK",
index == "M2WDHDVD...12" ~ "UK",
index == "SPDAEET" ~ "EU",
index == "SPDAUDT" ~ "UK",
index == "SPJXDAJT" ~ "JP",
index == "SPSADAZT" ~ "SA",
index == "TJDIVD" ~ "SA"
)
, Signal = case_when(
index == "FUDP" ~ "Dividend Yield",
index == "M2GBDY" ~ "Dividend Yield",
index == "M2WDHDVD...12" ~ "Dividend Yield",
index == "SPDAEET" ~ "Dividend Growth Per Share",
index == "SPDAUDT" ~ "Dividend Yield",
index == "SPJXDAJT" ~ "Dividend Yield",
index == "SPSADAZT" ~ "Dividend Growth Per Share",
index == "TJDIVD" ~ "Dividend Yield"
)) %>% select(index, Country, Signal) %>% distinct()
cumulative_returns <- cumulative_returns %>% merge(., name_mapping, "index")
saveRDS(cumulative_returns, "data/cumulative.rds")
cumulative_returns
cumulative_returns %>%
ggplot() +
geom_line(aes(date, "Excess Cumu", color = Signal.y), alpha = 0.7, size = 1.25) +
facet_grid(~index)+
labs(
title = paste("Volatility of Cluster Constituents", i),
subtitle = "",
x = "",
y = "",
caption = ""
) + theme_minimal()
# cumulative returns
cumulative_returns <- read_rds("data/cumulative.rds")
# plot
g <- cumulative_returns %>%
ggplot() +
geom_line(aes(date, "Excess Cumu", color = Signal.y), alpha = 0.7, size = 1.25) +
facet_grid(~index)+
labs(
title = paste("Volatility of Cluster Constituents", i),
subtitle = "",
x = "",
y = "",
caption = ""
) + theme_minimal()
# cumulative returns
cumulative_returns <- read_rds("data/cumulative.rds")
# plot
g <- cumulative_returns %>%
ggplot() +
geom_line(aes(date, "Excess Cumu", color = Signal), alpha = 0.7, size = 1.25) +
facet_grid(~index)+
labs(
title = paste("Volatility of Cluster Constituents", i),
subtitle = "",
x = "",
y = "",
caption = ""
) + theme_minimal()
cumulative_returns
# cumulative returns
cumulative_returns <- read_rds("data/cumulative.rds")
# plot
g <- cumulative_returns %>%
ggplot() +
geom_line(aes(date, "Excess Cumu", color = Signal), alpha = 0.7, size = 1.25) +
facet_grid(~index)+
labs(
title = paste("Volatility of Cluster Constituents"),
subtitle = "",
x = "",
y = "",
caption = ""
) + theme_minimal()
g
cumulative_returns %>%
ggplot() +
geom_line(aes(date, "Excess Cumu", color = Signal), alpha = 0.7, size = 1.25) +
facet_grid(~index, scales = "free") +
labs(
title = paste("Volatility of Cluster Constituents"),
subtitle = "",
x = "",
y = "",
caption = ""
) +
theme_minimal()
cumulative_returns %>%
ggplot() +
geom_line(aes(date, "Excess Cumu", color = Signal), alpha = 0.7, size = 1.25) +
facet_grid(index ~ Signal, scales = "free_y", space = "free_y", switch = "y", ncol = 2) +
labs(
title = paste("Volatility of Cluster Constituents"),
subtitle = "",
x = "",
y = "",
caption = ""
) +
theme_minimal()
cumulative_returns %>%
ggplot() +
geom_line(aes(date, "Excess Cumu", color = Signal), alpha = 0.7, size = 1.25) +
facet_grid(index ~ Signal, ncol= 2) +
labs(
title = paste("Volatility of Cluster Constituents"),
subtitle = "",
x = "",
y = "",
caption = ""
) +
theme_minimal()
cumulative_returns %>%
ggplot() +
geom_line(aes(date, "Excess Cumu", color = index), alpha = 0.7, size = 1.25)
cumulative_returns
cumulative_returns <- read_rds("data/cumulative.rds") %>% group_by(index) %>%
mutate("Excess Cumu" = "Excess Cumu"/first("Excess Cumu"))
cumulative_returns <- read_rds("data/cumulative.rds")
cumulative_returns <- read_rds("data/cumulative.rds") %>% filter(index == "FUDP")
cumulative_returns
cumulative_returns %>%
ggplot() +
geom_line(aes(date, "Excess Cumu"), alpha = 0.7, size = 1.25)
cumulative_returns <- read_rds("data/cumulative.rds") %>% rename(Ret = "Excess Cumu"
cumulative_returns
cumulative_returns <- read_rds("data/cumulative.rds") %>% rename(Ret = "Excess Cumu")
cumulative_returns
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret), alpha = 0.7, size = 1.25)
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret, color = Signal), alpha = 0.7, size = 1.25)+
facet_wrap(~index, ncol = 2)
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret, color = Signal), alpha = 0.7, size = 1.25)+
facet_wrap(~index, ncol = 4)
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret, color = Signal), alpha = 0.7, size = 1.25)+
facet_wrap(~index, ncol = 2, nrow = 5)
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret, color = Signal), alpha = 0.7, size = 1.25)+
facet_wrap(~index, ncol = 2, nrow = 5)+
labs(
title = "Cumulative Return of Dividend Portfolios",
subtitle = "",
x = "",
y = "Cumulative Returns",
caption = "\n Bloomberg, Authors own calculations"
) + theme_minimal()
# cumulative returns
cumulative_returns <- read_rds("data/cumulative.rds") %>% rename(Ret = "Excess Cumu")
# plot
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret, color = Signal), alpha = 0.7, size = 1.25)+
facet_wrap(~index, ncol = 3, nrow = 5)+
labs(
title = "Cumulative Return of Dividend Portfolios",
subtitle = "",
x = "",
y = "Cumulative Returns",
caption = "\n Bloomberg, Authors own calculations"
) + theme_minimal()
# cumulative returns
cumulative_returns <- read_rds("data/cumulative.rds") %>% rename(Ret = "Excess Cumu")
# plot
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret, color = Signal), alpha = 0.7, size = 1.25)+
facet_wrap(~index, ncol = 3, nrow = 5)+
labs(
title = "Cumulative Return of Dividend Portfolios",
subtitle = "",
x = "",
y = "Cumulative Returns",
caption = "\n Bloomberg, Authors own calculations"
) + theme_minimal()
# cumulative returns
cumulative_returns <- read_rds("data/cumulative.rds") %>% rename(Ret = "Excess Cumu")
# plot
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret, color = Signal), alpha = 0.7, size = 1.25)+
facet_wrap(~index, ncol = 3, nrow = 5)+
labs(
title = "Cumulative Return of Dividend Portfolios",
subtitle = "",
x = "",
y = "Cumulative Returns",
caption = "Note:\n Bloomberg, Authors own calculations"
) + theme_minimal()
# cumulative returns
cumulative_returns <- read_rds("data/cumulative.rds") %>% rename(Ret = "Excess Cumu")
# plot
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret, color = Signal), alpha = 0.7, size = 1.25)+
facet_wrap(~index, ncol = 3, nrow = 5)+
labs(
title = "Cumulative Return of Dividend Portfolios",
subtitle = "",
x = "",
y = "Cumulative Returns",
caption = "Source:Bloomberg,\nCalculations :Authors"
) + theme_minimal()
# cumulative returns
cumulative_returns <- read_rds("data/cumulative.rds") %>% rename(Ret = "Excess Cumu")
# plot
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret, color = Signal), alpha = 0.7, size = 1.25)+
facet_wrap(~index, ncol = 3, nrow = 5)+
labs(
title = "Cumulative Return of Dividend Portfolios",
subtitle = "",
x = "",
y = "Cumulative Returns",
caption = "Source:\n Bloomberg and Authors Calculations"
) + theme_minimal()
hivol <- read_rds("data/highvol.rds")
lovol <- read_rds('data/lovol.rds)
lovol
lovol <- read_rds("data/lovol.rds")
lovol
hivol
hivol <- read_rds("data/highvol.rds")
lovol <- read_rds("data/lovol.rds")
hivol <- readRDS("data/highvol.rds")
lovol <- readRDS("data/lovol.rds")
hivol
saveRDS(Hiking_cycle_returns, "data/hikingcycle.rds")
Hiking_cycle_returns <- bind_rows (stratifier(excess_returns, "FUDP", hivol_per_vector_us, "Hiking" ),
stratifier(excess_returns, "M2GBDY", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "M2WDHDVD...12", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "SPDAEET", Hiking_date_vector_eu, "Hiking" ),
stratifier(excess_returns, "SPDAUDT", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "SPJXDAJT", Hiking_date_vector_us, "Hiking" ),
stratifier(excess_returns, "SPSADAZT", Hiking_date_vector_sa, "Hiking"),
stratifier(excess_returns, "TJDIVD", Hiking_date_vector_sa, "Hiking")) %>% merge(., name_mapping, "index")
rate_data <- readxl::read_xlsx("data/Policy Rates.xlsx")
names <- c("Date", "US", "UK", "JP", "ECB", "SA")
colnames(rate_data) <- names
US_rates <- rate_data %>% select(Date, US)
UK_rates <- rate_data %>% select(Date, UK)
JP_rates <- rate_data %>% select(Date, JP)
SA_rates <- rate_data %>% select(Date, SA)
ECB_rates <- rate_data %>% select(Date, ECB)
#  rename the columns for the function to work
source(file = "code/Interest_Regime.R")
Regime_df <- Regime_change_df(US_rates, "US", 5)
Hiking_date_vector_us <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_us <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_us <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
Regime_df <- Regime_change_df(UK_rates, "UK", 5)
Hiking_date_vector_uk <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_uk <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_uk <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
Regime_df <- Regime_change_df(JP_rates, "JP", 5)
Hiking_date_vector_jp <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_jp <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_jp <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
Regime_df <- Regime_change_df(SA_rates, "SA", 5)
Hiking_date_vector_sa <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_sa <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_sa <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
Regime_df <- Regime_change_df(ECB_rates, "ECB", 5)
Hiking_date_vector_eu <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_eu <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_eu <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
# Hiking Performance
Hiking_cycle_returns <- bind_rows (stratifier(excess_returns, "FUDP", hivol_per_vector_us, "Hiking" ),
stratifier(excess_returns, "M2GBDY", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "M2WDHDVD...12", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "SPDAEET", Hiking_date_vector_eu, "Hiking" ),
stratifier(excess_returns, "SPDAUDT", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "SPJXDAJT", Hiking_date_vector_us, "Hiking" ),
stratifier(excess_returns, "SPSADAZT", Hiking_date_vector_sa, "Hiking"),
stratifier(excess_returns, "TJDIVD", Hiking_date_vector_sa, "Hiking")) %>% merge(., name_mapping, "index")
merge(., name_mapping, "index")
Hiking_cycle_returns <- bind_rows (stratifier(excess_returns, "FUDP", hivol_per_vector_us, "Hiking" ),
stratifier(excess_returns, "M2GBDY", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "M2WDHDVD...12", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "SPDAEET", Hiking_date_vector_eu, "Hiking" ),
stratifier(excess_returns, "SPDAUDT", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "SPJXDAJT", Hiking_date_vector_us, "Hiking" ),
stratifier(excess_returns, "SPSADAZT", Hiking_date_vector_sa, "Hiking"),
stratifier(excess_returns, "TJDIVD", Hiking_date_vector_sa, "Hiking")) %>% merge(., name_mapping, "index")
stratifier <- function(raw_df, index_name, Date_vector, Description) {
Mk_df <- raw_df %>%
filter(date %in% Date_vector & index == index_name) %>%
group_by(index) %>%
summarize( "Cycle" = Description, Months = n(), "Ann Ret" = (prod(1+Excess)^(12/Months)-1) *100)
Mk_df
}
rate_data <- readxl::read_xlsx("data/Policy Rates.xlsx")
names <- c("Date", "US", "UK", "JP", "ECB", "SA")
colnames(rate_data) <- names
US_rates <- rate_data %>% select(Date, US)
UK_rates <- rate_data %>% select(Date, UK)
JP_rates <- rate_data %>% select(Date, JP)
SA_rates <- rate_data %>% select(Date, SA)
ECB_rates <- rate_data %>% select(Date, ECB)
#  rename the columns for the function to work
source(file = "code/Interest_Regime.R")
Regime_df <- Regime_change_df(US_rates, "US", 5)
Hiking_date_vector_us <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_us <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_us <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
Regime_df <- Regime_change_df(UK_rates, "UK", 5)
Hiking_date_vector_uk <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_uk <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_uk <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
Regime_df <- Regime_change_df(JP_rates, "JP", 5)
Hiking_date_vector_jp <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_jp <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_jp <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
Regime_df <- Regime_change_df(SA_rates, "SA", 5)
Hiking_date_vector_sa <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_sa <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_sa <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
Regime_df <- Regime_change_df(ECB_rates, "ECB", 5)
Hiking_date_vector_eu <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_eu <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_eu <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
# Hiking Performance
Hiking_cycle_returns <- bind_rows (stratifier(excess_returns, "FUDP", hivol_per_vector_us, "Hiking" ),
stratifier(excess_returns, "M2GBDY", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "M2WDHDVD...12", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "SPDAEET", Hiking_date_vector_eu, "Hiking" ),
stratifier(excess_returns, "SPDAUDT", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "SPJXDAJT", Hiking_date_vector_us, "Hiking" ),
stratifier(excess_returns, "SPSADAZT", Hiking_date_vector_sa, "Hiking"),
stratifier(excess_returns, "TJDIVD", Hiking_date_vector_sa, "Hiking")) %>% merge(., name_mapping, "index")
rate_data <- readxl::read_xlsx("data/Policy Rates.xlsx")
names <- c("Date", "US", "UK", "JP", "ECB", "SA")
colnames(rate_data) <- names
US_rates <- rate_data %>% select(Date, US)
UK_rates <- rate_data %>% select(Date, UK)
JP_rates <- rate_data %>% select(Date, JP)
SA_rates <- rate_data %>% select(Date, SA)
ECB_rates <- rate_data %>% select(Date, ECB)
#  rename the columns for the function to work
source(file = "code/Interest_Regime.R")
Regime_df <- Regime_change_df(US_rates, "US", 5)
Hiking_date_vector_us <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_us <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_us <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
Regime_df <- Regime_change_df(UK_rates, "UK", 5)
Hiking_date_vector_uk <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_uk <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_uk <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
Regime_df <- Regime_change_df(JP_rates, "JP", 5)
Hiking_date_vector_jp <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_jp <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_jp <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
Regime_df <- Regime_change_df(SA_rates, "SA", 5)
Hiking_date_vector_sa <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_sa <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_sa <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
Regime_df <- Regime_change_df(ECB_rates, "ECB", 5)
Hiking_date_vector_eu <- Regime_df %>% filter(regime %in% "Hiking") %>% pull(Date)
Cutting_date_vector_eu <- Regime_df %>% filter(regime %in% "Cutting") %>% pull(Date)
Neutral_date_vector_eu <- Regime_df %>% filter(regime %in% "Neutral") %>% pull(Date)
# Hiking Performance
Hiking_cycle_returns <- bind_rows (stratifier(excess_returns, "FUDP", Hiking_date_vector_uk, "Hiking" ),
stratifier(excess_returns, "M2GBDY", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "M2WDHDVD...12", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "SPDAEET", Hiking_date_vector_eu, "Hiking" ),
stratifier(excess_returns, "SPDAUDT", Hiking_date_vector_uk , "Hiking" ),
stratifier(excess_returns, "SPJXDAJT", Hiking_date_vector_us, "Hiking" ),
stratifier(excess_returns, "SPSADAZT", Hiking_date_vector_sa, "Hiking"),
stratifier(excess_returns, "TJDIVD", Hiking_date_vector_sa, "Hiking")) %>% merge(., name_mapping, "index")
saveRDS(Hiking_cycle_returns, "data/hikingcycle.rds")
Cutting_cycle_returns <- bind_rows (stratifier(excess_returns, "FUDP", hivol_per_vector_us, "Cutting" ),
stratifier(excess_returns, "M2GBDY", Cutting_date_vector_uk , "Cutting" ),
stratifier(excess_returns, "M2WDHDVD...12", Cutting_date_vector_uk , "Cutting" ),
stratifier(excess_returns, "SPDAEET", Cutting_date_vector_eu, "Cutting" ),
stratifier(excess_returns, "SPDAUDT", Cutting_date_vector_uk , "Cutting" ),
stratifier(excess_returns, "SPJXDAJT", Cutting_date_vector_us, "Cutting" ),
stratifier(excess_returns, "SPSADAZT", Cutting_date_vector_sa, "Cutting"),
stratifier(excess_returns, "TJDIVD", Cutting_date_vector_sa, "Cutting")) %>% merge(., name_mapping, "index")
hiking <- readRDS("data/hikingcycle.rds")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
# Lets load in example data, and see how this can be stored and later called from your 'data' folder.
if(!require("tidyverse")) install.packages("tidyverse")
library(gt)
library(tidyverse)
library(huxtable)
library(kableExtra)
library(xtable)
library(fmxdat)
pacman::p_load("TTR")
pacman::p_load("tidyr", "tbl2xts","devtools","lubridate", "readr", "PerformanceAnalytics", "ggplot2", "dplyr")
source("code/EXCESSRETURN.R")
source("code/Theme.R")
# loadings
pacman::p_load("xts", "tidyverse", "tbl2xts", "PerformanceAnalytics",
"lubridate", "glue", "zoo")
df<- readxl::read_xlsx("data/MAD .xlsx")
# cumulative returns
cumulative_returns <- read_rds("data/cumulative.rds") %>% rename(Ret = "Excess Cumu")
# plot
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret, color = Signal), alpha = 0.7, size = 1.25)+
facet_wrap(~index, ncol = 3, nrow = 5)+
labs(
title = "Cumulative Return of Dividend Portfolios",
subtitle = "",
x = "",
y = "Cumulative Returns",
caption = "Source:\n Bloomberg and Authors Calculations"
) + theme_minimal()
# cumulative returns
cumulative_returns <- read_rds("data/cumulative.rds") %>% rename(Ret = "Excess Cumu")
# plot
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret, color = Signal), alpha = 0.7, size = 1.25)+
facet_wrap(~index, ncol = 3, nrow = 5)+
labs(
title = "Cumulative Return of Dividend Portfolios",
subtitle = "",
x = "",
y = "Cumulative Returns",
caption = "Source:\n Bloomberg and Authors Calculations"
) + theme_minimal()
# cumulative returns
cumulative_returns <- read_rds("data/cumulative.rds") %>% rename(Ret = "Excess Cumu")
# plot
cumulative_returns %>%
ggplot() +
geom_line(aes(date, Ret, color = Signal), alpha = 0.7, size = 1.25)+
facet_wrap(~index, ncol = 2, nrow = 5)+
labs(
title = "Cumulative Return of Dividend Portfolios",
subtitle = "",
x = "",
y = "Cumulative Returns",
caption = "Source:\n Bloomberg and Authors Calculations"
) +
theme_minimal() +
theme(legend.position = "none")
