group_by(YM, Vehicle) %>%
mutate(Return = Value / lag(Value) - 1) %>%
mutate(Return = coalesce(Return, 0)) %>%
tbl_xts(cols_to_xts = Return, spread_by = Vehicle) %>%
xts_tbl() %>%
mutate(ex.ret = Index - Benchmark) %>%
mutate(YM = format(date, "%b %y")) %>%
select(date, ex.ret, YM) %>%
group_by(YM) %>%
mutate(Return = cumprod(1 + ex.ret)) %>%
summarize("Market Period" = Description, Days = n(), annualized_return = last(Return) ^ (255 / Days) - 1) %>%
summarize(Name = !!glue("{index_name}"), "Market Period" = Description, "Annualized Return" = mean(annualized_return))
Mk_df
}
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" )
stratifier(df, "UK_HY_B", "UK", lovol_per_vector_eu, "Low Vol Period" )
stratifier(df, "JP_HY", "JP", lovol_per_vector_us, "Low Vol Period" )
stratifier(df, "JP_DG", "JP", lovol_per_vector_us, "Low Vol Period" )
stratifier(df, "EM_HY", "EM", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_HY", "US", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_DG", "US", lovol_per_vector_us, "Low Vol Period" )
stratifier <- function(raw_df, index_name, benchmark_name, Date_vector, Description) {
Mk_df <- raw_df %>%
dplyr::rename(Index = index_name, Benchmark = benchmark_name) %>%
select(Date, Index, Benchmark) %>%
gather(Vehicle, Value, -Date) %>%
mutate(YM = format(Date, "%b %y")) %>%
filter(Date %in% Date_vector) %>%
group_by(YM, Vehicle) %>%
mutate(Return = Value / lag(Value) - 1) %>%
mutate(Return = coalesce(Return, 0)) %>%
tbl_xts(cols_to_xts = Return, spread_by = Vehicle) %>%
xts_tbl() %>%
mutate(ex.ret = Index - Benchmark)  %>%
select(date, ex.ret)  %>%
mutate(Return = cumprod(1 + ex.ret)) %>%
summarize(Name = !!glue("{index_name}"), "Market Period" = Description, Days = n(),  "Annualized Return" = mean(last(Return) ^ (255 / Days) - 1))
Mk_df
}
stratifier(df, "US_DG", "US", lovol_per_vector_us, "Low Vol Period" )
stratifier(df, "EU_DG", "EU_2", lovol_per_vector_eu, "Low Vol Period" )
stratifier(df, "UK_HY_B", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "JP_HY", "JP", lovol_per_vector_us, "Low Vol Period" )
bind_rows(
stratifier(df, "EU_HY", "EU", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_DG", "EU_2", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "UK_HY", "UK", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "UK_HY_B", "UK", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "JP_HY", "JP", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "JP_DG", "JP", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "EM_HY", "EM", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "US_HY", "US", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "US_DG", "US", hivol_per_vector_us, "High Vol Period" ))
stratifier <- function(raw_df, index_name, benchmark_name, Date_vector, Description) {
Mk_df <- raw_df %>%
dplyr::rename(Index = index_name, Benchmark = benchmark_name) %>%
select(Date, Index, Benchmark) %>%
gather(Vehicle, Value, -Date) %>%
mutate(YM = format(Date, "%b %y")) %>%
filter(Date %in% Date_vector) %>%
group_by(YM, Vehicle) %>%
mutate(Return = Value / lag(Value) - 1) %>%
mutate(Return = coalesce(Return, 0)) %>%
tbl_xts(cols_to_xts = Return, spread_by = Vehicle) %>%
xts_tbl() %>%
mutate(ex.ret = Index - Benchmark)  %>%
select(date, ex.ret)  %>%
mutate(Return = cumprod(1 + ex.ret)) %>%
summarize(Name = !!glue("{index_name}"), "Market Period" = Description, Days = n(),  "Annualized Return" = mean(last(Return) ^ (255 / Days) - 1)*100,"Annualized Return" = !!glue("{Annualized Return}%"))
Mk_df
}
stratifier(df, "EU_HY", "EU", hivol_per_vector_eu, "High Vol Period" )
stratifier <- function(raw_df, index_name, benchmark_name, Date_vector, Description) {
Mk_df <- raw_df %>%
dplyr::rename(Index = index_name, Benchmark = benchmark_name) %>%
select(Date, Index, Benchmark) %>%
gather(Vehicle, Value, -Date) %>%
mutate(YM = format(Date, "%b %y")) %>%
filter(Date %in% Date_vector) %>%
group_by(YM, Vehicle) %>%
mutate(Return = Value / lag(Value) - 1) %>%
mutate(Return = coalesce(Return, 0)) %>%
tbl_xts(cols_to_xts = Return, spread_by = Vehicle) %>%
xts_tbl() %>%
mutate(ex.ret = Index - Benchmark)  %>%
select(date, ex.ret)  %>%
mutate(Return = cumprod(1 + ex.ret)) %>%
summarize(Name = !!glue("{index_name}"), "Market Period" = Description, Days = n(), "Annualized Return" = mean(last(Return) ^ (255 / Days) - 1)*100)
Mk_df
}
stratifier(df, "EU_HY", "EU", hivol_per_vector_eu, "High Vol Period" )
source("~/Desktop/Much Ado Dividends/Much-Ado-Dividends/Thesis/code/Stratifier.R")
stratifier(df, "EU_HY", "EU", hivol_per_vector_eu, "High Vol Period" )
source("~/Desktop/Much Ado Dividends/Much-Ado-Dividends/Thesis/code/Stratifier.R")
bind_rows(
stratifier(df, "EU_HY", "EU", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_DG", "EU_2", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "UK_HY", "UK", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "UK_HY_B", "UK", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "JP_HY", "JP", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "JP_DG", "JP", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "EM_HY", "EM", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "US_HY", "US", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "US_DG", "US", hivol_per_vector_us, "High Vol Period" ))
bind_rows(
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_DG", "EU_2", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY_B", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "JP_HY", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "JP_DG", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "EM_HY", "EM", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_HY", "US", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_DG", "US", lovol_per_vector_us, "Low Vol Period" )
)
bind_rows(
stratifier(df, "EU_HY", "EU", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_DG", "EU_2", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "UK_HY", "UK", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "UK_HY_B", "UK", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "JP_HY", "JP", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "JP_DG", "JP", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "EM_HY", "EM", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "US_HY", "US", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "US_DG", "US", hivol_per_vector_us, "High Vol Period" ))
bind_rows(
stratifier(df, "EU_HY", "EU", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "EU_DG", "EU_2", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "UK_HY", "UK", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "UK_HY_B", "UK", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "JP_HY", "JP", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "JP_DG", "JP", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "EM_HY", "EM", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "US_HY", "US", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "US_DG", "US", hivol_per_vector_us, "High Vol Period" ))
bind_rows(
stratifier(df, "EU_HY", "EU", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "EU_DG", "EU_2", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "UK_HY", "UK", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "UK_HY_B", "UK", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "JP_HY", "JP", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "JP_DG", "JP", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "EM_HY", "EM", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "US_HY", "US", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "US_DG", "US", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "SA_HY", "SA", hivol_per_vector_sa, "High Vol Period" ),
stratifier(df, "SA_DG", "SA", hivol_per_vector_sa, "High Vol Period" ))
bind_rows(
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_DG", "EU_2", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY_B", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "JP_HY", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "JP_DG", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "EM_HY", "EM", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_HY", "US", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_DG", "US", lovol_per_vector_us, "Low Vol Period" )
bind_rows(
bind_rows(
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_DG", "EU_2", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY_B", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "JP_HY", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "JP_DG", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "EM_HY", "EM", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_HY", "US", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_DG", "US", lovol_per_vector_us, "Low Vol Period" )
)
bind_rows(
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_DG", "EU_2", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY_B", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "JP_HY", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "JP_DG", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "EM_HY", "EM", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_HY", "US", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_DG", "US", lovol_per_vector_us, "Low Vol Period" )
)
bind_rows(
stratifier(df, "EU_HY", "EU", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "EU_DG", "EU_2", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "UK_HY", "UK", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "UK_HY_B", "UK", hivol_per_vector_eu, "High Vol Period" ),
stratifier(df, "JP_HY", "JP", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "JP_DG", "JP", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "EM_HY", "EM", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "US_HY", "US", hivol_per_vector_us, "High Vol Period" ),
stratifier(df, "US_DG", "US", hivol_per_vector_us, "High Vol Period" ))
bind_rows(
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_DG", "EU_2", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY_B", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "JP_HY", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "JP_DG", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "EM_HY", "EM", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_HY", "US", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_DG", "US", lovol_per_vector_us, "Low Vol Period" )
)
# get rolling sd for the volatility index
# # get the top quartile and bottom quartil
#
strat_df <- vol_data %>% filter(index == "VIX") %>%  mutate(topQ = quantile(RollSD, probs = 0.95),
botQ = quantile(RollSD, probs = 0.05),
Strat = ifelse(RollSD >= topQ, "HiVol",
ifelse(RollSD <= botQ, "LowVol", "Normal_Vol")))
# loadings
pacman::p_load("xts", "tidyverse", "tbl2xts", "PerformanceAnalytics",
"lubridate", "glue", "zoo")
df<- readxl::read_xlsx("data/MAD .xlsx")
#  change the column names for ease of analysis
geographical_codenames <- c("UK_HY", "EM_HY", "UK", "EM", "UK_HY_B", "UK_B", "JP_HY", "EU", "US_HY", "US", "W_HY", "W", "EU_DG", "EU_2", "JP_DG", "US_DG", "US_2", "JP", "SA_DG", "SA", "SA_HY", "EU_HY", "W_HY", "W")
colnames(df)[2:23] <- geographical_codenames
library(kableExtra)
indexes <- readxl::read_xlsx("data/Index Description.xlsx")
kable(indexes)
source("code/simpleexcessreturn.R")
source("code/EXCESSRETURN.R")
library(glue)
library(stats)
#   calculate simple returns just simple excess returns
a <- df %>% My_excess_return(., "UK_HY", "UK")
b <- df %>% My_excess_return(., "UK_HY_B", "UK_B")
c <- df %>% My_excess_return(., "US_HY", "US")
d <- df %>% My_excess_return(., "US_DG", "US_2")
e <- df %>% My_excess_return(., "EU_HY", "EU")
f <- df %>% My_excess_return(., "EU_DG", "EU_2")
g <- df %>% My_excess_return(., "JP_HY", "JP")
h <- df %>% My_excess_return(., "JP_DG", "JP")
i <- df %>% My_excess_return(., "EM_HY", "EM")
j <- df %>% My_excess_return(., "SA_HY", "SA")
k <- df %>% My_excess_return(., "SA_DG", "SA")
l <- df %>% My_excess_return(., "W_HY", "W")
# Table to describe excess returns
excess_return_df <- list( a, b, c, d, e,f,g,h,i,j,k, l) %>%
reduce(inner_join, by='date')
table_df <- excess_return_df %>%
gather(Regions, Cumulative_Excess_Return, -date) %>%
group_by(Regions) %>%
summarise("Start Date" = first(date) , "Total Years"  = round( n()/12,0),  Median = median(Cumulative_Excess_Return),  "Cumulative Excess Return" = last(Cumulative_Excess_Return)) %>% arrange(Cumulative_Excess_Return"Cumulative_Excess_Return")
source("code/simpleexcessreturn.R")
source("code/EXCESSRETURN.R")
library(glue)
library(stats)
#   calculate simple returns just simple excess returns
a <- df %>% My_excess_return(., "UK_HY", "UK")
b <- df %>% My_excess_return(., "UK_HY_B", "UK_B")
c <- df %>% My_excess_return(., "US_HY", "US")
d <- df %>% My_excess_return(., "US_DG", "US_2")
e <- df %>% My_excess_return(., "EU_HY", "EU")
f <- df %>% My_excess_return(., "EU_DG", "EU_2")
g <- df %>% My_excess_return(., "JP_HY", "JP")
h <- df %>% My_excess_return(., "JP_DG", "JP")
i <- df %>% My_excess_return(., "EM_HY", "EM")
j <- df %>% My_excess_return(., "SA_HY", "SA")
k <- df %>% My_excess_return(., "SA_DG", "SA")
l <- df %>% My_excess_return(., "W_HY", "W")
# Table to describe excess returns
excess_return_df <- list( a, b, c, d, e,f,g,h,i,j,k, l) %>%
reduce(inner_join, by='date')
table_df <- excess_return_df %>%
gather(Regions, Cumulative_Excess_Return, -date) %>%
group_by(Regions) %>%
summarise("Start Date" = first(date) , "Total Years"  = round( n()/12,0),  Median = median(Cumulative_Excess_Return),  "Cumulative Excess Return" = last(Cumulative_Excess_Return))
table_df
#   get the vol data and get some dates
vol_data <- readxl::read_xlsx("data/volatility for indexes.xlsx") %>% gather(index, px , -Date) %>%
mutate(ret = px/lag(px)-1, RollSD = RcppRoll::roll_sd(1 + ret, 12, fill = NA, align = "right") *
sqrt(12)) %>%
filter(!is.na(RollSD))
# plot just to visualize what we are doing
vol_plot <- vol_data %>% ggplot()+
geom_line(aes(Date, RollSD, color = index))+
facet_wrap(~index)
vol_plot
# # get the top quartile and bottom quartile
strat_df <- vol_data %>% filter(index == "VIX") %>%  mutate(topQ = quantile(RollSD, probs = 0.95),
botQ = quantile(RollSD, probs = 0.05),
Strat = ifelse(RollSD >= topQ, "HiVol",
ifelse(RollSD <= botQ, "LowVol", "Normal_Vol")))
# # US strat
hivol_per_vector_us <- strat_df %>% filter(Strat %in% "HiVol") %>% pull(Date)
lovol_per_vector_us <- strat_df %>% filter(Strat %in% "LowVol") %>% pull(Date)
# UK
strat_df <-vol_data %>% filter(index == "IVIUK") %>% mutate(topQ = quantile(RollSD, probs = 0.95),
botQ = quantile(RollSD, probs = 0.05),
Strat = ifelse(RollSD >= topQ, "HiVol",
ifelse(RollSD <= botQ, "LowVol", "Normal_Vol")))
#
hivol_per_vector_uk  <- strat_df %>% filter(Strat %in% "HiVol") %>% pull(Date)
lovol_per_vector_uk  <- strat_df %>% filter(Strat %in% "LowVol") %>% pull(Date)
#  EU
strat_df <-vol_data %>% filter(index == "V2X") %>% mutate(topQ = quantile(RollSD, probs = 0.95),
botQ = quantile(RollSD, probs = 0.05),
Strat = ifelse(RollSD >= topQ, "HiVol",
ifelse(RollSD <= botQ, "LowVol", "Normal_Vol")))
#
hivol_per_vector_eu  <- strat_df %>% filter(Strat %in% "HiVol") %>% pull(Date)
lovol_per_vector_eu  <- strat_df %>% filter(Strat %in% "LowVol") %>% pull(Date)
# # SA
strat_df <-vol_data %>% filter(index == "SAVIT40") %>% mutate(topQ = quantile(RollSD, probs = 0.95),
botQ = quantile(RollSD, probs = 0.05),
Strat = ifelse(RollSD >= topQ, "HiVol",
ifelse(RollSD <= botQ, "LowVol", "Normal_Vol")))
#
hivol_per_vector_sa <- strat_df %>% filter(Strat %in% "HiVol") %>% pull(Date)
lovol_per_vector_sa <- strat_df %>% filter(Strat %in% "LowVol") %>% pull(Date)
#  High Vol df
source("code/Stratifier.R")
stratifying_df <-  bind_rows(
stratifier(df, "EU_HY", "EU", hivol_per_vector_eu, "High Vol" ),
stratifier(df, "EU_DG", "EU_2", hivol_per_vector_eu, "High Vol" ),
stratifier(df, "UK_HY", "UK", hivol_per_vector_eu, "High Vol" ),
stratifier(df, "UK_HY_B", "UK", hivol_per_vector_eu, "High Vol"),
stratifier(df, "JP_HY", "JP", hivol_per_vector_us, "High Vol"),
stratifier(df, "JP_DG", "JP", hivol_per_vector_us, "High Vol"),
stratifier(df, "EM_HY", "EM", hivol_per_vector_us, "High Vol"),
stratifier(df, "SA_HY", "SA", hivol_per_vector_sa, "High Vol"),
stratifier(df, "SA_DG", "SA", hivol_per_vector_sa, "High Vol"),
stratifier(df, "US_HY", "US", hivol_per_vector_us, "High Vol"),
stratifier(df, "US_DG", "US", hivol_per_vector_us, "High Vol"),
stratifier(df , "W_HY", "W", hivol_per_vector_us, "High Vol"),
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_DG", "EU_2", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY_B", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "JP_HY", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "JP_DG", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "EM_HY", "EM", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "SA_HY", "SA", lovol_per_vector_sa, "Low Vol Period" ),
stratifier(df, "SA_DG", "SA", lovol_per_vector_sa, "Low Vol Period" ),
stratifier(df, "US_HY", "US", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_DG", "US", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "W_HY", "W", lovol_per_vector_us, "Low Vol Period")
)
stratifying_df %>% arrange(Name)
# lets get cumulative returns for our dividend strategies and Max drawdowns
cum_df <- excess_return_df %>%
rename_all(~paste0("Excess from ", .)) %>% rename( "date" = "Excess from date") %>%
gather(Funds, ret, -date) %>% mutate(Year = format(date, "%Y")) %>% group_by(Year, Funds) %>% summarize(DD = (max(ret) - min(ret))/max(ret)* 100, Range = range(ret)) %>% arrange(desc(Range))
order <- cum_df %>% pull(Funds) %>% unique()
cum_df$Year <- as.Date(paste0(cum_df$Year, "-01-01"))
source("code/order.R")
plot <- cum_df %>%
plot_order(., Column = "Funds", Order = order) %>%
ggplot() +
geom_line(aes(Year, DD), color = "steelblue", size = 1.1, alpha = 0.8) +
fmxdat::theme_fmx() +
facet_wrap(~Funds) +
labs(x = "", y = " Max Drawdowns (%)", title = "Yearly Drawdowns", subtitle = "", caption = "Source:Bloomberg and\n Authors Calculations")
plot
# lets get cumulative returns for our dividend strategies and Max drawdowns
cum_df <- excess_return_df %>% rename( "date" = "Excess_fro") %>%
gather(Funds, ret, -date) %>% mutate(Year = format(date, "%Y")) %>% group_by(Year, Funds) %>% summarize(DD = (max(ret) - min(ret))/max(ret)* 100, Range = range(ret)) %>% arrange(desc(Range))
# lets get cumulative returns for our dividend strategies and Max drawdowns
cum_df <- excess_return_df %>%
gather(Funds, ret, -date) %>% mutate(Year = format(date, "%Y")) %>% group_by(Year, Funds) %>% summarize(DD = (max(ret) - min(ret))/max(ret)* 100, Range = range(ret)) %>% arrange(desc(Range))
order <- cum_df %>% pull(Funds) %>% unique()
cum_df$Year <- as.Date(paste0(cum_df$Year, "-01-01"))
source("code/order.R")
plot <- cum_df %>%
plot_order(., Column = "Funds", Order = order) %>%
ggplot() +
geom_line(aes(Year, DD), color = "steelblue", size = 1.1, alpha = 0.8) +
fmxdat::theme_fmx() +
facet_wrap(~Funds) +
labs(x = "", y = " Max Drawdowns (%)", title = "Yearly Drawdowns", subtitle = "", caption = "Source:Bloomberg and\n Authors Calculations")
plot
plot <- cum_df %>%
plot_order(., Column = "Funds", Order = order) %>%
ggplot() +
geom_line(aes(Year, DD), color = "steelblue", size = 1.1, alpha = 0.8) +
fmxdat::theme_fmx() +
# facet_wrap(~Funds) +
labs(x = "", y = " Max Drawdowns (%)", title = "Yearly Drawdowns", subtitle = "", caption = "Source:Bloomberg and\n Authors Calculations")
# loadings
pacman::p_load("xts", "tidyverse", "tbl2xts", "PerformanceAnalytics",
"lubridate", "glue", "zoo")
df<- readxl::read_xlsx("data/MAD .xlsx")
#  change the column names for ease of analysis
geographical_codenames <- c("UK_HY", "EM_HY", "UK", "EM", "UK_HY_B", "UK_B", "JP_HY", "EU", "US_HY", "US", "W_HY", "W", "EU_DG", "EU_2", "JP_DG", "US_DG", "US_2", "JP", "SA_DG", "SA", "SA_HY", "EU_HY", "W_HY", "W")
colnames(df)[2:23] <- geographical_codenames
library(kableExtra)
indexes <- readxl::read_xlsx("data/Index Description.xlsx")
kable(indexes)
source("code/simpleexcessreturn.R")
source("code/EXCESSRETURN.R")
library(glue)
library(stats)
#   calculate simple returns just simple excess returns
a <- df %>% My_excess_return(., "UK_HY", "UK")
b <- df %>% My_excess_return(., "UK_HY_B", "UK_B")
c <- df %>% My_excess_return(., "US_HY", "US")
d <- df %>% My_excess_return(., "US_DG", "US_2")
e <- df %>% My_excess_return(., "EU_HY", "EU")
f <- df %>% My_excess_return(., "EU_DG", "EU_2")
g <- df %>% My_excess_return(., "JP_HY", "JP")
h <- df %>% My_excess_return(., "JP_DG", "JP")
i <- df %>% My_excess_return(., "EM_HY", "EM")
j <- df %>% My_excess_return(., "SA_HY", "SA")
k <- df %>% My_excess_return(., "SA_DG", "SA")
l <- df %>% My_excess_return(., "W_HY", "W")
# Table to describe excess returns
excess_return_df <- list( a, b, c, d, e,f,g,h,i,j,k, l) %>%
reduce(inner_join, by='date')
table_df <- excess_return_df %>%
gather(Regions, Cumulative_Excess_Return, -date) %>%
group_by(Regions) %>%
summarise("Start Date" = first(date) , "Total Years"  = round( n()/12,0),  Median = median(Cumulative_Excess_Return),  "Cumulative Excess Return" = last(Cumulative_Excess_Return))
table_df
#   get the vol data and get some dates
vol_data <- readxl::read_xlsx("data/volatility for indexes.xlsx") %>% gather(index, px , -Date) %>%
mutate(ret = px/lag(px)-1, RollSD = RcppRoll::roll_sd(1 + ret, 12, fill = NA, align = "right") *
sqrt(12)) %>%
filter(!is.na(RollSD))
# # get the top quartile and bottom quartile
strat_df <- vol_data %>% filter(index == "VIX") %>%  mutate(topQ = quantile(RollSD, probs = 0.95),
botQ = quantile(RollSD, probs = 0.05),
Strat = ifelse(RollSD >= topQ, "HiVol",
ifelse(RollSD <= botQ, "LowVol", "Normal_Vol")))
# # US strat
hivol_per_vector_us <- strat_df %>% filter(Strat %in% "HiVol") %>% pull(Date)
lovol_per_vector_us <- strat_df %>% filter(Strat %in% "LowVol") %>% pull(Date)
# UK
strat_df <-vol_data %>% filter(index == "IVIUK") %>% mutate(topQ = quantile(RollSD, probs = 0.95),
botQ = quantile(RollSD, probs = 0.05),
Strat = ifelse(RollSD >= topQ, "HiVol",
ifelse(RollSD <= botQ, "LowVol", "Normal_Vol")))
#
hivol_per_vector_uk  <- strat_df %>% filter(Strat %in% "HiVol") %>% pull(Date)
lovol_per_vector_uk  <- strat_df %>% filter(Strat %in% "LowVol") %>% pull(Date)
#  EU
strat_df <-vol_data %>% filter(index == "V2X") %>% mutate(topQ = quantile(RollSD, probs = 0.95),
botQ = quantile(RollSD, probs = 0.05),
Strat = ifelse(RollSD >= topQ, "HiVol",
ifelse(RollSD <= botQ, "LowVol", "Normal_Vol")))
#
hivol_per_vector_eu  <- strat_df %>% filter(Strat %in% "HiVol") %>% pull(Date)
lovol_per_vector_eu  <- strat_df %>% filter(Strat %in% "LowVol") %>% pull(Date)
# # SA
strat_df <-vol_data %>% filter(index == "SAVIT40") %>% mutate(topQ = quantile(RollSD, probs = 0.95),
botQ = quantile(RollSD, probs = 0.05),
Strat = ifelse(RollSD >= topQ, "HiVol",
ifelse(RollSD <= botQ, "LowVol", "Normal_Vol")))
#
hivol_per_vector_sa <- strat_df %>% filter(Strat %in% "HiVol") %>% pull(Date)
lovol_per_vector_sa <- strat_df %>% filter(Strat %in% "LowVol") %>% pull(Date)
#  High Vol df
source("code/Stratifier.R")
stratifying_df <-  bind_rows(
stratifier(df, "EU_HY", "EU", hivol_per_vector_eu, "High Vol" ),
stratifier(df, "EU_DG", "EU_2", hivol_per_vector_eu, "High Vol" ),
stratifier(df, "UK_HY", "UK", hivol_per_vector_eu, "High Vol" ),
stratifier(df, "UK_HY_B", "UK", hivol_per_vector_eu, "High Vol"),
stratifier(df, "JP_HY", "JP", hivol_per_vector_us, "High Vol"),
stratifier(df, "JP_DG", "JP", hivol_per_vector_us, "High Vol"),
stratifier(df, "EM_HY", "EM", hivol_per_vector_us, "High Vol"),
stratifier(df, "SA_HY", "SA", hivol_per_vector_sa, "High Vol"),
stratifier(df, "SA_DG", "SA", hivol_per_vector_sa, "High Vol"),
stratifier(df, "US_HY", "US", hivol_per_vector_us, "High Vol"),
stratifier(df, "US_DG", "US", hivol_per_vector_us, "High Vol"),
stratifier(df , "W_HY", "W", hivol_per_vector_us, "High Vol"),
stratifier(df, "EU_HY", "EU", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "EU_DG", "EU_2", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "UK_HY_B", "UK", lovol_per_vector_eu, "Low Vol Period" ),
stratifier(df, "JP_HY", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "JP_DG", "JP", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "EM_HY", "EM", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "SA_HY", "SA", lovol_per_vector_sa, "Low Vol Period" ),
stratifier(df, "SA_DG", "SA", lovol_per_vector_sa, "Low Vol Period" ),
stratifier(df, "US_HY", "US", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "US_DG", "US", lovol_per_vector_us, "Low Vol Period" ),
stratifier(df, "W_HY", "W", lovol_per_vector_us, "Low Vol Period")
)
stratifying_df %>% arrange(Name)
# lets get cumulative returns for our dividend strategies and Max drawdowns
cum_df <- excess_return_df %>%
gather(Funds, ret, -date) %>% mutate(Year = format(date, "%Y")) %>% group_by(Year, Funds) %>% summarize(DD = (max(ret) - min(ret))/max(ret)* 100, Range = range(ret)) %>% arrange(desc(Range))
order <- cum_df %>% pull(Funds) %>% unique()
cum_df$Year <- as.Date(paste0(cum_df$Year, "-01-01"))
source("code/order.R")
plot <- cum_df %>%
plot_order(., Column = "Funds", Order = order) %>%
ggplot() +
geom_line(aes(Year, DD), color = "steelblue", size = 1.1, alpha = 0.8) +
fmxdat::theme_fmx() +
# facet_wrap(~Funds) +
labs(x = "", y = " Max Drawdowns (%)", title = "Yearly Drawdowns", subtitle = "", caption = "Source:Bloomberg and\n Authors Calculations")
plot
# lets get cumulative returns for our dividend strategies and Max drawdowns
cum_df <- excess_return_df %>%
gather(Funds, ret, -date) %>% mutate(Year = format(date, "%Y")) %>% group_by(Year, Funds) %>% summarize(DD = (max(ret) - min(ret))/max(ret)* 100, Range = range(ret)) %>% arrange(desc(Range))
order <- cum_df %>% pull(Funds) %>% unique()
cum_df$Year <- as.Date(paste0(cum_df$Year, "-01-01"))
source("code/order.R")
plot <- cum_df %>%
plot_order(., Column = "Funds", Order = order) %>%
ggplot() +
geom_line(aes(Year, DD), color = "steelblue", size = 1.1, alpha = 0.8) +
fmxdat::theme_fmx() +
facet_wrap(~Funds) +
labs(x = "", y = " Max Drawdowns (%)", title = "Yearly Drawdowns", subtitle = "", caption = "Source:Bloomberg and\n Authors Calculations")
plot
